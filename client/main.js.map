{"version":3,"file":"main.js","mappings":"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":["./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/main/account/account.component.ts","./src/app/main/account/account.component.html","./src/app/main/connect-center/connect-center.component.ts","./src/app/main/connect-center/connect-center.component.html","./src/app/main/dibi-dict/dibi-dict.component.ts","./src/app/main/dibi-dict/dibi-dict.component.html","./src/app/main/dibi-grammar/dibi-grammar.component.ts","./src/app/main/dibi-grammar/dibi-grammar.component.html","./src/app/main/dibi-infos/dibi-infos.component.ts","./src/app/main/dibi-infos/dibi-infos.component.html","./src/app/main/dibi-new-word/dibi-new-word.component.ts","./src/app/main/dibi-new-word/dibi-new-word.component.html","./src/app/main/dibi-suggest/dibi-suggest.component.ts","./src/app/main/dibi-suggest/dibi-suggest.component.html","./src/app/main/dibi-vote/dibi-vote.component.ts","./src/app/main/dibi-vote/dibi-vote.component.html","./src/app/main/flag/flag.component.ts","./src/app/main/flag/flag.component.html","./src/app/main/infos/infos.component.ts","./src/app/main/infos/infos.component.html","./src/app/main/logs/logs.component.ts","./src/app/main/logs/logs.component.html","./src/app/main/main.component.ts","./src/app/main/main.component.html","./src/app/services.ts","./src/environments/environment.ts","./src/main.ts","./node_modules/moment/locale|sync|/^/.*$"],"sourcesContent":["import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent {\r\n  title = 'client';\r\n}\r\n","<app-main></app-main>","import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\n\r\nimport { AppComponent } from './app.component';\r\n\r\nimport { FormsModule } from '@angular/forms';\r\nimport { CommonModule } from '@angular/common';\r\nimport { HttpClientModule } from '@angular/common/http';\r\n\r\nimport { SocketIoModule, SocketIoConfig } from 'ngx-socket-io';\r\n\r\nimport { ChartsModule } from 'ng2-charts';\r\n\r\nimport { MainComponent } from './main/main.component';\r\nimport { FlagComponent } from './main/flag/flag.component';\r\nimport { DibiInfosComponent } from './main/dibi-infos/dibi-infos.component';\r\nimport { DibiDictComponent } from './main/dibi-dict/dibi-dict.component';\r\nimport { LogsComponent } from './main/logs/logs.component';\r\nimport { InfosComponent } from './main/infos/infos.component';\r\nimport { ConnectCenterComponent } from './main/connect-center/connect-center.component';\r\nimport { DibiSuggestComponent } from './main/dibi-suggest/dibi-suggest.component';\r\nimport { DibiVoteComponent } from './main/dibi-vote/dibi-vote.component';\r\n\r\n// Social connexion\r\nimport { SocialLoginModule, SocialAuthServiceConfig } from 'angularx-social-login';\r\nimport { GoogleLoginProvider, FacebookLoginProvider } from 'angularx-social-login';\r\nimport { AccountComponent } from './main/account/account.component';\r\nimport { DibiGrammarComponent } from './main/dibi-grammar/dibi-grammar.component';\r\nimport { DibiNewWordComponent } from './main/dibi-new-word/dibi-new-word.component';\r\nconst socialId = '886518860996-o45rlpuk1f0n9verombausklme0ampga.apps.googleusercontent.com';\r\n\r\n// Socket.io\r\nconst hostname = window.location.hostname;\r\nconst url = (hostname === 'localhost') ? `${window.location.protocol}//${hostname}:5000` : undefined;\r\nconst config: SocketIoConfig = { url, options: {} };\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    MainComponent,\r\n    FlagComponent,\r\n    DibiDictComponent,\r\n    DibiInfosComponent,\r\n    LogsComponent,\r\n    InfosComponent,\r\n    ConnectCenterComponent,\r\n    DibiSuggestComponent,\r\n    DibiVoteComponent,\r\n    AccountComponent,\r\n    DibiGrammarComponent,\r\n    DibiNewWordComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    FormsModule,\r\n    CommonModule,\r\n    HttpClientModule,\r\n    SocketIoModule.forRoot(config),\r\n    ChartsModule,\r\n    SocialLoginModule\r\n  ],\r\n  providers: [{\r\n    provide: 'SocialAuthServiceConfig',\r\n    useValue: {\r\n      autoLogin: false,\r\n      providers: [\r\n        {\r\n          id: GoogleLoginProvider.PROVIDER_ID,\r\n          provider: new GoogleLoginProvider(socialId)\r\n        },\r\n        {\r\n          id: FacebookLoginProvider.PROVIDER_ID,\r\n          provider: new FacebookLoginProvider(socialId)\r\n        }\r\n      ]\r\n    } as SocialAuthServiceConfig,\r\n  }],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-account',\n  templateUrl: './account.component.html',\n  styleUrls: ['./account.component.scss']\n})\nexport class AccountComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"body\">\n    <div class=\"container\">\n        <div class=\"header\">\n            Vos propositions\n        </div>\n        <div class=\"content\">\n            Pas encore codé\n        </div>\n    </div>\n</div>","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\nimport { Socket } from 'ngx-socket-io';\r\nimport { SocialAuthService, SocialUser } from \"angularx-social-login\";\r\nimport { FacebookLoginProvider, GoogleLoginProvider } from \"angularx-social-login\";\r\nimport { AccountSettings } from 'src/app/types';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Component({\r\n  selector: 'app-connect-center',\r\n  templateUrl: './connect-center.component.html',\r\n  styleUrls: ['./connect-center.component.scss']\r\n})\r\nexport class ConnectCenterComponent implements OnInit {\r\n\r\n  // Emitters vers le component main\r\n  @Output() adminConnectionEmitter = new EventEmitter<boolean>(); // Approuve la connexion admin\r\n  @Output() closeBoxEmitter = new EventEmitter<boolean>(); // Ferme la fenêtre popup\r\n  @Output() userEmitter = new EventEmitter<SocialUser>(); // Approuve la connexion avec compte Google\r\n\r\n  @Input() adminConnected = false; // Si un administrateur est connecté\r\n  @Input() pwd: string; // Pwd en localSorage pour plus rester connecté\r\n  password: string; // Mot de passe administrateur entré par l'utilisateur\r\n  errorMessage: string; // Message en cas de mot de passe faux\r\n\r\n  // Utilisateur Google et informations profil\r\n  @Input() user: SocialUser;\r\n  @Input() accountSettings: AccountSettings;\r\n\r\n  constructor(private http: HttpClient, private socket: Socket, private authService: SocialAuthService) {\r\n    // Si click à l'extérieur de la fenêtre, fermeture de la fenêtre\r\n    window.onclick = (event: MouseEvent) => {\r\n      if (event.target === document.getElementById('zone-click-exit')) {\r\n        this.closeBoxEmitter.emit(false);\r\n      }\r\n    };\r\n    // Si touche esc, fermeture de la fenêtre\r\n    window.addEventListener('keyup', (event: KeyboardEvent) => {\r\n      if (event.key === 'Escape') {\r\n        this.closeBoxEmitter.emit(false);\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n\r\n    // Si mot de passe incorrect, un message rouge s'affiche\r\n    this.socket.on('wrongPwd', () => {\r\n      this.setAdminConnected(false);\r\n      window.localStorage.removeItem('pwd');\r\n      this.errorMessage = 'Mot de passe incorrect.';\r\n      setTimeout(() => {\r\n        this.errorMessage = undefined;\r\n      }, 5000);\r\n    });\r\n\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    // Si aucune information du profil n'est chargé, elle sont initialisées à vide\r\n    setTimeout(() => {\r\n      if (!this.accountSettings) {\r\n        if (this.user) {\r\n          this.accountSettings = { email: this.user.email, user: this.user, discordPseudo: '', discordTag: '' };\r\n        }\r\n      }\r\n    }, 250);\r\n  }\r\n\r\n  signInWithGoogle(): void {\r\n    this.authService.signIn(GoogleLoginProvider.PROVIDER_ID);\r\n  }\r\n\r\n  // signInWithFB(): void {\r\n  //   this.authService.signIn(FacebookLoginProvider.PROVIDER_ID);\r\n  // }\r\n\r\n  signOut(): void {\r\n    this.authService.signOut();\r\n    this.accountSettings = { email: '', user: undefined, discordPseudo: '', discordTag: '' };\r\n  }\r\n\r\n  /**\r\n   * Vérifie que le mot de passe administrateur soit correct\r\n   */\r\n  connectAdmin(): void {\r\n    this.socket.emit('login', { pwd: btoa(this.password) });\r\n  }\r\n\r\n  /**\r\n   * Déconnecte la session admin\r\n   */\r\n  logoutAdmin() {\r\n    this.setAdminConnected(false);\r\n    window.localStorage.removeItem('pwd');\r\n    this.socket.emit('logout', {});\r\n  }\r\n\r\n  /**\r\n   * Set la variable adminConnected (pour ce component, et pour le component parent (main))\r\n   */\r\n  setAdminConnected(value: boolean): void {\r\n    this.adminConnected = value;\r\n    this.adminConnectionEmitter.emit(value); // Envoie de la donnée au component main\r\n  }\r\n\r\n  /**\r\n   * Enregistre en bdd les options du compte\r\n   */\r\n  saveAccountSettings(): void {\r\n    if (this.accountSettings.discordPseudo && this.accountSettings.discordTag) {\r\n      if (this.user) {\r\n        try {\r\n          this.accountSettings.user.response = undefined;\r\n        } catch (error: any) {\r\n          location.reload();\r\n        }\r\n        this.accountSettings.email = this.accountSettings.user.email;\r\n        this.socket.emit('setProfile', this.accountSettings);\r\n      } else {\r\n        window.alert('Compte Google non connecté');\r\n      }\r\n    } else {\r\n    }\r\n  }\r\n\r\n}\r\n","<div class=\"container\" id=\"zone-click-exit\">\r\n    <div class=\"box\">\r\n        <div class=\"header\">\r\n            <h2>Centre de connexion</h2>\r\n        </div>\r\n        <div class=\"accounts\">\r\n            <!-- <div class=\"google-account\">\r\n                <h3 *ngIf=\"user\" class=\"margin-bottom\">Compte Google connecté</h3>\r\n                <h3 *ngIf=\"!user\" class=\"margin-bottom\">Connexion compte Google</h3>\r\n                <div class=\"google-info\">\r\n                    <div class=\"user-display\" *ngIf=\"user\">\r\n                        <img src=\"{{user.photoUrl}}\">\r\n                        <div class=\"text-infos\">\r\n                            <h4>{{user.name}}</h4>\r\n                            <p>{{user.email}}</p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <h3 *ngIf=\"user\">Informations profil</h3>\r\n                <div class=\"account-setup\" *ngIf=\"user\">\r\n                    <span>Saisir pseudo Discord</span>\r\n                    <div class=\"inline-inputs\" *ngIf=\"accountSettings\">\r\n                        <input [(ngModel)]=\"accountSettings.discordPseudo\" type=\"text\" class=\"pseudo\"\r\n                            (focusout)=\"saveAccountSettings()\">\r\n                        <span>#</span>\r\n                        <input [(ngModel)]=\"accountSettings.discordTag\" type=\"text\" class=\"tag\" placeholder=\"1234\"\r\n                            (focusout)=\"saveAccountSettings()\">\r\n                        <img *ngIf=\"!accountSettings.discordPseudo || !accountSettings.discordTag\" class=\"mandatory\"\r\n                            src=\"assets/mandatory.svg\">\r\n                    </div>\r\n                </div>\r\n                <button *ngIf=\"!user\" (click)=\"signInWithGoogle()\">Connexion via Google</button>\r\n                <button *ngIf=\"user\" (click)=\"signOut()\">Déconnexion Google</button>\r\n            </div> -->\r\n            <div class=\"admin\">\r\n                <div class=\"admin-section\" *ngIf=\"adminConnected\">\r\n                    <div class=\"crown-and-title margin-bottom\">\r\n                        <img class=\"golden-crown\" src=\"assets/crown-solid.svg\" title=\"Admin\">\r\n                        <h3>Vous êtes Admin</h3>\r\n                    </div>\r\n                    <button *ngIf=\"adminConnected\" (click)=\"logoutAdmin()\">Déconnexion admin</button>\r\n                </div>\r\n                <div class=\"admin-section\" *ngIf=\"!adminConnected\">\r\n                    <h3 class=\"margin-bottom\">Connexion Admin</h3>\r\n                    <input class=\"margin-bottom\" type=\"password\" [(ngModel)]=\"password\">\r\n                    <span class=\"margin-bottom\" *ngIf=\"errorMessage\">{{errorMessage}}</span>\r\n                    <button (click)=\"connectAdmin()\">Entrer</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","import { Component, Input, OnInit, SimpleChanges } from '@angular/core';\r\nimport { Socket } from 'ngx-socket-io';\r\nimport { Observable, Subject } from 'rxjs';\r\nimport { debounceTime, map } from 'rxjs/operators';\r\nimport { removeAccents } from 'src/app/services';\r\nimport { DibiWord } from 'src/app/types';\r\n\r\n@Component({\r\n  selector: 'app-dibi-dict',\r\n  templateUrl: './dibi-dict.component.html',\r\n  styleUrls: ['./dibi-dict.component.scss']\r\n})\r\nexport class DibiDictComponent implements OnInit {\r\n\r\n  // Liste des mots du dico\r\n  @Input() dibiDict: DibiWord[]; // Dictionnaire récupéré du component principal\r\n  filteredDibiDict: DibiWord[] = []; // Seulement ceux filtrés\r\n  filteredAllPages: DibiWord[][] = []; // Ceux filtrés structurés par pages\r\n\r\n  nbWordsPerPage: number; // Nombre de mots affichés dans une page (enregistré en localStorage pour préférence utilisateur)\r\n  nbWordsPerPageDefalut = 100; // Nombre de mots affichés dans une page par défaut (car localStorage pour préf utilisateur)\r\n  currentPage = 0; // Index de la page courante\r\n\r\n  @Input() adminConnected: boolean; // Si un administrateur est connecté\r\n  @Input() pwd: string; // Pwd en localSorage pour plus rester connecté\r\n\r\n  // Pour le filtrage des mots\r\n\r\n  search = ''; // Input de recherche\r\n  searchSimplified = ''; // String en minuscule et sans accents de la recherche\r\n  searchOptions = {\r\n    partsOfSpeech: {\r\n      Noun: true,\r\n      Pronoun: true,\r\n      Verb: true,\r\n      Adjective: true,\r\n      Adverb: true,\r\n      Conjonction: true,\r\n      Interjection: true,\r\n      FunctionParticule: true,\r\n      TransformationParticule: true,\r\n      SpiritWord: true\r\n    },\r\n    element: {\r\n      Dibi: true,\r\n      French: true,\r\n      English: true,\r\n      Author: false,\r\n      Date: false,\r\n      Description: false\r\n    },\r\n    doesNotContiain: {\r\n      author: false,\r\n      description: false,\r\n      english: false,\r\n    }\r\n  };\r\n  private searchObservable = new Subject<string>();\r\n  searchResult$: Observable<DibiWord[]>;\r\n  regexSearch: boolean = false; // Si la recherche s'effectue en regex ou de manière classique\r\n\r\n  advancedSearch = false;\r\n\r\n  // Pour le tri des mots\r\n\r\n  sortBy: SortBy = 'date'; // Possibilité de trier par mot dibi, date, nature grammaticale, \r\n  sortOrder: SortOrder = 'cresc'; // cresc (ordre alphabétique) et decresc (ordre inverse alphabétique)\r\n\r\n  message = { mes: '', color: '' }; // Message et sa couleur affichant le retour du serveur\r\n\r\n  translate: Translate = 'French';\r\n\r\n  detail = ''; // Permet d'ouvrir l'affichage détaillé des mots\r\n\r\n  editing = ''; // Id du mot que l'on édite\r\n  wordToEdit: DibiWord; // Mot que l'on édite\r\n  oldWord: DibiWord; // Ancient mot, avnat qu'il soit modifié\r\n\r\n  constructor(private socket: Socket) {\r\n\r\n    // Pipe du traitement de la recherche\r\n    this.searchResult$ = this.searchObservable.pipe(\r\n      debounceTime(200), // Attente de 200 ms après que l'utilisateur ait arreté de taper sa racherche pour lancer le filtrage\r\n      map(mc => {\r\n        let filtered = [];\r\n\r\n        // Si la recherche est en expression régulière, vérification de la validité du regex saisi\r\n        try {\r\n          if (this.regexSearch) {\r\n            new RegExp(this.search);\r\n            this.setColorInputSearch('green'); // Si regex correcte, couleur de fond verte pour l'input de recherche\r\n          } else {\r\n            this.setColorInputSearch('grey'); // Si recherche non regex, couleur classique\r\n          }\r\n\r\n          // Itération sur tous les mots pour les filtrer et les placer dans filteredDibiDict (seulements les mots triés)\r\n          this.dibiDict.forEach(word => {\r\n\r\n            // Vérification que le mot à filtrer soit inclus dans parmis les options à gauche de la barre de recherche\r\n            if ((this.searchOptions.doesNotContiain.author && word.author) || (this.searchOptions.doesNotContiain.description && word.description) || (this.searchOptions.doesNotContiain.english && word.english)) {\r\n\r\n            } else {\r\n\r\n              // Vérification que le mot à filtrer respecte l'expression saisie en barre de recherche\r\n              if (this.searchOptions.partsOfSpeech[word.partOfSpeech]) {\r\n                if (this.searchSimplified === '') {\r\n                  filtered.push(word);\r\n                } else {\r\n                  let isThere = false;\r\n                  if (this.searchOptions.element.Dibi) {\r\n                    if (this.isWordMatching(word.dibi)) {\r\n                      isThere = true;\r\n                    }\r\n                  }\r\n                  if (this.searchOptions.element.French) {\r\n                    if (this.isWordMatching(word.french)) {\r\n                      isThere = true;\r\n                    }\r\n                  }\r\n                  if (this.searchOptions.element.English) {\r\n                    if (word.english) {\r\n                      if (this.isWordMatching(word.english)) {\r\n                        isThere = true;\r\n                      }\r\n                    }\r\n                  }\r\n                  if (this.searchOptions.element.Author) {\r\n                    if (word.author) {\r\n                      if (this.isWordMatching(word.author)) {\r\n                        isThere = true;\r\n                      }\r\n                    }\r\n                  }\r\n                  if (this.searchOptions.element.Date) {\r\n                    if (word.date) {\r\n                      if (this.isWordMatching(word.date.toString())) {\r\n                        isThere = true;\r\n                      }\r\n                    }\r\n                  }\r\n                  if (this.searchOptions.element.Description) {\r\n                    if (word.description) {\r\n                      if (this.isWordMatching(word.description)) {\r\n                        isThere = true;\r\n                      }\r\n                    }\r\n                  }\r\n                  if (isThere) {\r\n                    filtered.push(word);\r\n                  }\r\n                }\r\n              }\r\n\r\n            }\r\n          });\r\n\r\n          // Catch de l'erreur, le regex n'est pas valide\r\n        } catch (e: any) {\r\n          this.setColorInputSearch('red');\r\n        }\r\n\r\n        // Tri des mots\r\n        this.sortDictionary(filtered, this.sortBy, this.sortOrder);\r\n\r\n        // Organisation par pages\r\n        this.buildPages();\r\n\r\n        return filtered;\r\n      })\r\n    );\r\n\r\n    // Subscribede l'observable\r\n    this.searchResult$.subscribe();\r\n\r\n  }\r\n\r\n  ngOnInit(): void {\r\n\r\n    // Check du localStorage pour voir la préférence de la recherche simple ou avancée\r\n    window.localStorage.getItem('advancedSearch') ? this.advancedSearch = (window.localStorage.getItem('advancedSearch') === 'true' ? true : false) : false;\r\n\r\n    // Check du localStorage pour voir les préférences de tri (pas de filtrage)\r\n    window.localStorage.getItem('sortBy') ? this.sortBy = window.localStorage.getItem('sortBy') as SortBy : {};\r\n    window.localStorage.getItem('sortOrder') ? this.sortOrder = window.localStorage.getItem('sortOrder') as SortOrder : {};\r\n\r\n    // Check du localStorage pour voir su une préférence en nombre de mots par page existe\r\n    window.localStorage.getItem('nbWordsPerPage') ? this.nbWordsPerPage = parseInt(window.localStorage.getItem('nbWordsPerPage')) : this.nbWordsPerPage = this.nbWordsPerPageDefalut;\r\n\r\n    // En réponse à la modification d'un mot\r\n    this.socket.on('responseEditWord', (data) => {\r\n      if (data.status === 0) {\r\n        this.message = { mes: 'Succès', color: 'green' };\r\n      } else {\r\n        this.message = { mes: data.mes, color: 'red' };\r\n      }\r\n      // Clear du message au bout d'un certain délai\r\n      setTimeout(() => { this.message = { mes: '', color: '' }; }, 10000);\r\n    });\r\n\r\n    // Mot bien supprimé\r\n    this.socket.on('wordDeleted', () => {\r\n      location.reload();\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Si un changement Angular est détecté, et qu'il s'agit de @Input() dibiDict\r\n   * Démarrage du traitement du dictionnaire (mise en minuscule des mots Dibi et lancement de l'observable de recherche)\r\n   */\r\n  ngOnChanges(): void {\r\n    // Met en minuscule tous les mots Dibis (pour que les mots soit mieux lisibles dans le dico)\r\n    if (this.dibiDict) {\r\n      this.dibiDict.forEach(word => {\r\n        word.dibi = word.dibi.toLowerCase();\r\n        this.searchObservable.next();\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Vérifie si un élément de la recherche est présent dans certains champs d'un mot\r\n   * Cette méthode sert pour le filtrage des mots par une recherche\r\n   * Il est possible de rechercher un expression classique ou régulière (regex)\r\n   */\r\n  isWordMatching(elem: string): boolean {\r\n    let wordMatch = false;\r\n    if (this.regexSearch) {\r\n      if (elem.match(this.search)) {\r\n        wordMatch = true;\r\n      }\r\n    } else {\r\n      if (removeAccents(elem.toLowerCase()).includes(this.searchSimplified)) {\r\n        wordMatch = true;\r\n      }\r\n    }\r\n    return wordMatch;\r\n  }\r\n\r\n  /**\r\n   * Modifie la couleur de fond de l'input de recherche pour indiquer que le regex est juste ou faux\r\n   */\r\n  setColorInputSearch(color: string): void {\r\n    let colorHex = '#555453';\r\n    switch (color) {\r\n      case 'red': colorHex = '#957371'; break;\r\n      case 'green': colorHex = '#759371'; break;\r\n      case 'blue': colorHex = '#757391'; break;\r\n    }\r\n    let doc = document.getElementById('expression-search');\r\n    doc ? doc.style.backgroundColor = colorHex : {};\r\n  }\r\n\r\n  /**\r\n   * Sélection ou déselecitonne la recherche regex\r\n   */\r\n  toggleRegexSearch(): void {\r\n    this.eachKeySearch() // Lancement d'un next dans l'observable de filtrage\r\n    if (this.regexSearch) {\r\n      if (this.searchOptions.element.Dibi && !this.searchOptions.element.French && !this.searchOptions.element.English) {\r\n        this.searchOptions.element.French = true;\r\n        this.searchOptions.element.English = true;\r\n      }\r\n    } else {\r\n      if (this.searchOptions.element.Dibi && this.searchOptions.element.French && this.searchOptions.element.English) {\r\n        this.searchOptions.element.French = false;\r\n        this.searchOptions.element.English = false;\r\n      }\r\n    }\r\n    this.regexSearch = !this.regexSearch; // Toggle de la recherche regex\r\n  }\r\n\r\n  /**\r\n   * Demande au serveur de supprimer un mot\r\n   */\r\n  delete(word: DibiWord): void {\r\n    if (!this.adminConnected) {\r\n      alert('Administrateur non connecté.');\r\n    } else {\r\n      if (window.confirm('Confirmer la suppression')) {\r\n        this.socket.emit('deleteWord', { word, pwd: this.pwd });\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Fonction déclenché quand l'utilisateur clique sur une ligne pour déployer les détails du mot\r\n   */\r\n  openDetail(word: DibiWord): void {\r\n    if (this.detail === word._id) {\r\n      this.detail = '';\r\n    } else {\r\n      this.detail = word._id;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Quand l'utilisateur clique sur le bouton d'édition d'un mot, préparation de l'environnement d'édition\r\n   */\r\n  edit(word: DibiWord): void {\r\n    if (this.editing === word._id) {\r\n      this.editing = '';\r\n    } else {\r\n      this.editing = word._id;\r\n      this.oldWord = JSON.parse(JSON.stringify(word));\r\n      this.wordToEdit = word;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Envoie au serveur de la demande de modification du mot édité\r\n   */\r\n  editWord(): void {\r\n    if (!this.adminConnected) {\r\n      alert('Administrateur non connecté.');\r\n    } else {\r\n      this.message = { mes: 'Enregistrement...', color: 'yellow' };\r\n      this.socket.emit('editWord', { wordToEdit: this.wordToEdit, oldWord: this.oldWord, pwd: this.pwd });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * À chaque touche cliqué sur l'input de recherche, envoie d'un next dans l'Observable searchObservable\r\n   */\r\n  eachKeySearch(): void {\r\n    // Remove des accents de l'expression recherchée\r\n    this.searchSimplified = removeAccents(this.search.toLowerCase());\r\n    // Suppression des espaces avant et après\r\n    this.searchSimplified = this.searchSimplified.trim();\r\n    // Next sur l'observable de filtrage de tous les mots\r\n    this.searchObservable.next(this.searchSimplified);\r\n  }\r\n\r\n  /**\r\n   * Vide la barre de recherche\r\n   */\r\n  emptySearch(): void {\r\n    this.search = ''\r\n    this.searchSimplified = '';\r\n    this.searchObservable.next(this.searchSimplified);\r\n  }\r\n\r\n  /**\r\n   * Sélectionne tous ou aucun des cases à cocher pour la nature des mots\r\n   */\r\n  allPartsOfSpeech(b: boolean): void {\r\n    for (let [key, value] of Object.entries(this.searchOptions.partsOfSpeech)) {\r\n      this.searchOptions.partsOfSpeech[key] = b;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Quand l'utilisateur clique sur un label pour trier par (mot dibi, date d'ajout, nature, ordre normal, inverse)\r\n   */\r\n  setSort(sortBy: SortBy): void {\r\n    if (this.sortBy === sortBy) {\r\n      if (this.sortOrder === 'cresc') {\r\n        this.sortOrder = 'decresc';\r\n        window.localStorage.setItem('sortOrder', 'decresc');\r\n      } else {\r\n        this.sortOrder = 'cresc';\r\n        window.localStorage.setItem('sortOrder', 'cresc');\r\n      }\r\n    } else {\r\n      this.sortOrder = 'cresc';\r\n      window.localStorage.setItem('sortOrder', 'cresc');\r\n    }\r\n    this.sortBy = sortBy;\r\n    window.localStorage.setItem('sortBy', sortBy);\r\n    this.sortDictionary(this.filteredDibiDict, this.sortBy, this.sortOrder);\r\n    this.buildPages();\r\n  }\r\n\r\n  /**\r\n  * Tri tous les mots dans le dictionnaire selon un critère et un ordre\r\n  * Puis lance le calcul d'affichage en fonction des options de tri\r\n  */\r\n  sortDictionary(list: DibiWord[], sortBy: SortBy, sortOrder: SortOrder): void {\r\n    if (sortBy === 'date') { // Tri par date (de type Date)\r\n      list.sort((a, b) => {\r\n        if (!a.date && !b.date) {\r\n          return 0;\r\n        } else if (!a.date) {\r\n          if (sortOrder === 'cresc') {\r\n            return 1;\r\n          } else {\r\n            return -1;\r\n          }\r\n        } else if (!b.date) {\r\n          if (sortOrder === 'cresc') {\r\n            return -1;\r\n          } else {\r\n            return 1;\r\n          }\r\n        } else {\r\n          if (a.date > b.date) {\r\n            if (sortOrder === 'cresc') {\r\n              return -1;\r\n            } else {\r\n              return 1;\r\n            }\r\n          } else if (a.date < b.date) {\r\n            if (sortOrder === 'cresc') {\r\n              return 1;\r\n            } else {\r\n              return -1;\r\n            }\r\n          } else {\r\n            return 0;\r\n          }\r\n        }\r\n      });\r\n    } else { // Tri par élément de type string\r\n      list.sort((a, b) => {\r\n        const aComparable = removeAccents(a[sortBy].toLowerCase());\r\n        const bComparable = removeAccents(b[sortBy].toLowerCase());\r\n        if (aComparable > bComparable) {\r\n          if (sortOrder === 'cresc') {\r\n            return 1;\r\n          } else {\r\n            return -1;\r\n          }\r\n        } else if (aComparable < bComparable) {\r\n          if (sortOrder === 'cresc') {\r\n            return -1;\r\n          } else {\r\n            return 1;\r\n          }\r\n        } else {\r\n          return 0;\r\n        }\r\n      });\r\n    }\r\n    this.filteredDibiDict = list;\r\n    // this.eachKeySearch();\r\n  }\r\n\r\n  /**\r\n   * À partir de la liste des mots filtrés et triés, construit 1 à n pages pour limiter le nombre de mots affichés en même temps\r\n   */\r\n  buildPages(): void {\r\n    this.currentPage = 0;\r\n    this.filteredAllPages = []; // Vidage de la liste trié\r\n    let i = 1; // Incrément pour compter le nombre de mots par page\r\n    let page = 0; // Page courante pour ajouter les mots\r\n    this.filteredAllPages[page] = [];\r\n    this.filteredDibiDict.forEach(word => {\r\n      this.filteredAllPages[page].push(word);\r\n      if (i === this.nbWordsPerPage) {\r\n        i = 1;\r\n        page++;\r\n        this.filteredAllPages[page] = [];\r\n      } else {\r\n        i++;\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n  * Change de page, 4 boutons, 4 comportements\r\n  */\r\n  changePage(action: string): void {\r\n    if (action === 'fullLeft') {\r\n      this.currentPage = 0;\r\n    } else if (action === 'left') {\r\n      if (this.currentPage > 0) {\r\n        this.currentPage--;\r\n      }\r\n    } else if (action === 'right') {\r\n      if (this.currentPage < this.filteredAllPages.length - 1) {\r\n        this.currentPage++;\r\n      }\r\n    } else if (action === 'fullRight') {\r\n      this.currentPage = this.filteredAllPages.length - 1;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Modifie le nombre de mots affichés par page\r\n   */\r\n  editNbWordsPerPage(): void {\r\n    const nb = parseInt(window.prompt('Nombre de mots affichés par page'));\r\n    if (nb > 0) { // Pas moins d'un mot par page\r\n      this.nbWordsPerPage = nb;\r\n      window.localStorage.setItem('nbWordsPerPage', nb.toString());\r\n      this.buildPages();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Ouvre ou ferme les options avancées de recherche de mots\r\n   */\r\n  toggleAdvancedSearch(b: boolean): void {\r\n    window.localStorage.setItem('advancedSearch', b.toString());\r\n    this.advancedSearch = b;\r\n  }\r\n\r\n}\r\n\r\n// Types internes à cette classe\r\n\r\ntype SortBy = 'dibi' | 'french' | 'date' | 'partOfSpeech'; // Tri selon un élément\r\ntype SortOrder = 'cresc' | 'decresc'; // Ordre de tri\r\ntype Translate = 'French' | 'English' | 'Both';","<div class=\"body\">\r\n    <div class=\"container\">\r\n        <div class=\"top\">\r\n            <div class=\"simple-top\" *ngIf=\"!advancedSearch\">\r\n                <div class=\"input-and-cross\" id=\"expression-search\">\r\n                    <input type=\"text\" [(ngModel)]=\"search\" (input)=\"eachKeySearch()\" placeholder=\"Rechercher\">\r\n                    <div title=\"Effacer la recherche\" class=\"cross\" (click)=\"emptySearch()\">\r\n                        <img class=\"empty-search\" src=\"./assets/times-solid.svg\">\r\n                    </div>\r\n                </div>\r\n                <div class=\"toggle-advanced-search\" (click)=\"toggleAdvancedSearch(true)\">\r\n                    <img class=\"advanced-search-icon\" src=\"assets/ellipsis-solid.svg\" alt=\"Icône recherche avancée\">\r\n                </div>\r\n            </div>\r\n            <div class=\"advanced-top\" *ngIf=\"advancedSearch\">\r\n                <div class=\"left\">\r\n                    <div class=\"all-none-partOfSpeech\">\r\n                        <div class=\"all-none\" (click)=\"eachKeySearch()\"><label (click)=\"allPartsOfSpeech(true)\"\r\n                                title=\"Sélectionner toutes les natures grammaticales\">Tous</label></div>\r\n                        <div class=\"all-none\" (click)=\"eachKeySearch()\"><label (click)=\"allPartsOfSpeech(false)\"\r\n                                title=\"Sélectionner aucune nature grammaticale\">Aucun</label></div>\r\n                    </div>\r\n                    <div class=\"partsOfSpeech\">\r\n                        <div class=\"partOfSpeech\" (click)=\"eachKeySearch()\"><input id=\"Noun\" type=\"checkbox\"\r\n                                class=\"Noun\" [(ngModel)]=\"searchOptions.partsOfSpeech.Noun\"><label for=\"Noun\"\r\n                                class=\"Noun\">Noms</label>\r\n                        </div>\r\n                        <div class=\"partOfSpeech\" (click)=\"eachKeySearch()\"><input id=\"Pronoun\" type=\"checkbox\"\r\n                                class=\"Pronoun\" [(ngModel)]=\"searchOptions.partsOfSpeech.Pronoun\"><label for=\"Pronoun\"\r\n                                class=\"Pronoun\">Pronoms</label></div>\r\n                        <div class=\"partOfSpeech\" (click)=\"eachKeySearch()\"><input id=\"Adjective\" type=\"checkbox\"\r\n                                class=\"Adjective\" [(ngModel)]=\"searchOptions.partsOfSpeech.Adjective\"><label\r\n                                for=\"Adjective\" class=\"Adjective\">Adjectifs</label></div>\r\n                        <div class=\"partOfSpeech\" (click)=\"eachKeySearch()\"><input id=\"Verb\" type=\"checkbox\"\r\n                                class=\"Verb\" [(ngModel)]=\"searchOptions.partsOfSpeech.Verb\"><label for=\"Verb\"\r\n                                class=\"Verb\">Verbes</label>\r\n                        </div>\r\n                        <div class=\"partOfSpeech\" (click)=\"eachKeySearch()\"><input id=\"Adverb\" type=\"checkbox\"\r\n                                class=\"Adverb\" [(ngModel)]=\"searchOptions.partsOfSpeech.Adverb\"><label for=\"Adverb\"\r\n                                class=\"Adverb\">Adverbes</label></div>\r\n                        <div class=\"partOfSpeech\" (click)=\"eachKeySearch()\"><input id=\"FunctionParticule\"\r\n                                type=\"checkbox\" class=\"FunctionParticule\"\r\n                                [(ngModel)]=\"searchOptions.partsOfSpeech.FunctionParticule\"><label\r\n                                for=\"FunctionParticule\" class=\"FunctionParticule\">Particules de fonction</label></div>\r\n                        <div class=\"partOfSpeech\" (click)=\"eachKeySearch()\"><input id=\"TransformationParticule\"\r\n                                type=\"checkbox\" class=\"TransformationParticule\"\r\n                                [(ngModel)]=\"searchOptions.partsOfSpeech.TransformationParticule\"><label\r\n                                for=\"TransformationParticule\" class=\"TransformationParticule\">Particules de\r\n                                transformation</label></div>\r\n                        <div class=\"partOfSpeech\" (click)=\"eachKeySearch()\"><input id=\"SpiritWord\" type=\"checkbox\"\r\n                                class=\"SpiritWord\" [(ngModel)]=\"searchOptions.partsOfSpeech.SpiritWord\"><label\r\n                                for=\"SpiritWord\" class=\"SpiritWord\">Mots d'esprit</label></div>\r\n                        <div class=\"partOfSpeech\" (click)=\"eachKeySearch()\"><input id=\"Conjonction\" type=\"checkbox\"\r\n                                class=\"Conjonction\" [(ngModel)]=\"searchOptions.partsOfSpeech.Conjonction\"><label\r\n                                for=\"Conjonction\" class=\"Conjonction\">Conjonctions</label></div>\r\n                        <div class=\"partOfSpeech\" (click)=\"eachKeySearch()\"><input id=\"Interjection\" type=\"checkbox\"\r\n                                class=\"Interjection\" [(ngModel)]=\"searchOptions.partsOfSpeech.Interjection\"><label\r\n                                for=\"Interjection\" class=\"Interjection\">Interjections</label></div>\r\n                        <ng-container *ngIf=\"adminConnected\">\r\n                            <div class=\"partOfSpeech\" (click)=\"eachKeySearch()\"><input id=\"noAuthor\" type=\"checkbox\"\r\n                                    class=\"noAuthor\" [(ngModel)]=\"searchOptions.doesNotContiain.author\"><label\r\n                                    for=\"noAuthor\" class=\"noAuthor\">Sans créateur</label></div>\r\n                            <div class=\"partOfSpeech\" (click)=\"eachKeySearch()\"><input id=\"noDescription\"\r\n                                    type=\"checkbox\" class=\"noDescription\"\r\n                                    [(ngModel)]=\"searchOptions.doesNotContiain.description\"><label for=\"noDescription\"\r\n                                    class=\"noDescription\">Sans description</label></div>\r\n                            <div class=\"partOfSpeech\" (click)=\"eachKeySearch()\"><input id=\"noEnglish\" type=\"checkbox\"\r\n                                    class=\"noEnglish\" [(ngModel)]=\"searchOptions.doesNotContiain.english\"><label\r\n                                    for=\"noEnglish\" class=\"noEnglish\">Sans Anglais</label></div>\r\n                        </ng-container>\r\n                    </div>\r\n                </div>\r\n                <div class=\"right\">\r\n                    <div class=\"search-input\">\r\n                        <div class=\"search-and-regex-and-advanced-toggle\">\r\n                            <div class=\"input-and-cross\" id=\"expression-search\">\r\n                                <input type=\"text\" [(ngModel)]=\"search\" (input)=\"eachKeySearch()\"\r\n                                    placeholder=\"Rechercher\">\r\n                                <div title=\"Effacer la recherche\" class=\"cross\" (click)=\"emptySearch()\">\r\n                                    <img class=\"empty-search\" src=\"./assets/times-solid.svg\">\r\n                                </div>\r\n                            </div>\r\n                            <button (click)=\"toggleRegexSearch()\" [className]=\"regexSearch ? 'regexOn' : ''\"\r\n                                title=\"Recherche expression régulière\">.*</button>\r\n                            <div class=\"toggle-advanced-search\" (click)=\"toggleAdvancedSearch(false)\">\r\n                                <img class=\"advanced-search-icon\" src=\"assets/ellipsis-solid.svg\"\r\n                                    alt=\"Icône recherche avancée\">\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"options-search\">\r\n                            <div class=\"element\" (click)=\"eachKeySearch()\"><input id=\"Dibi\" type=\"checkbox\" class=\"Dibi\"\r\n                                    [(ngModel)]=\"searchOptions.element.Dibi\"><label for=\"Dibi\"\r\n                                    class=\"label-option-search\">Dibi</label></div>\r\n                            <div class=\"element\" (click)=\"eachKeySearch()\"><input id=\"French\" type=\"checkbox\"\r\n                                    class=\"French\" [(ngModel)]=\"searchOptions.element.French\"><label for=\"French\"\r\n                                    class=\"label-option-search\">Français</label></div>\r\n                            <div class=\"element\" (click)=\"eachKeySearch()\"><input id=\"English\" type=\"checkbox\"\r\n                                    class=\"English\" [(ngModel)]=\"searchOptions.element.English\"><label for=\"English\"\r\n                                    class=\"label-option-search\">Anglais</label></div>\r\n                            <div class=\"element\" (click)=\"eachKeySearch()\"><input id=\"Author\" type=\"checkbox\"\r\n                                    class=\"Author\" [(ngModel)]=\"searchOptions.element.Author\"><label for=\"Author\"\r\n                                    class=\"label-option-search\">Créateur</label></div>\r\n                            <!-- <div class=\"element\" (click)=\"eachKeySearch()\"><input id=\"Date\" type=\"checkbox\" class=\"Date\" [(ngModel)]=\"searchOptions.element.Date\"><label for=\"Date\" class=\"label-option-search\">Date</label></div>\r\n                                <div class=\"element\" (click)=\"eachKeySearch()\"><input id=\"Description\" type=\"checkbox\" class=\"Description\" [(ngModel)]=\"searchOptions.element.Description\"><label for=\"Description\" class=\"label-option-search\">Description</label></div> -->\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"row-pages\">\r\n            <div class=\"left\">\r\n                <img (click)=\"changePage('fullLeft')\" src=\"./assets/angle-double-left-solid.svg\">\r\n                <img (click)=\"changePage('left')\" src=\"./assets/angle-left-solid.svg\">\r\n            </div>\r\n            <div class=\"middle\">\r\n                <span (click)=\"editNbWordsPerPage()\">{{filteredDibiDict.length === 0 ? '0' : this.currentPage *\r\n                    nbWordsPerPage + 1}} -\r\n                    {{((this.currentPage + 1) * nbWordsPerPage) > filteredDibiDict.length ?\r\n                    (filteredDibiDict.length) : ((this.currentPage + 1) * nbWordsPerPage)}} sur\r\n                    {{filteredDibiDict.length}}</span>\r\n            </div>\r\n            <div class=\"right\">\r\n                <img (click)=\"changePage('right')\" src=\"./assets/angle-right-solid.svg\">\r\n                <img (click)=\"changePage('fullRight')\" src=\"./assets/angle-double-right-solid.svg\">\r\n            </div>\r\n        </div>\r\n        <div class=\"row-order\">\r\n            <div class=\"left\">\r\n                <div class=\"label-button-sort\" (click)=\"setSort('dibi')\" title=\"Trier par mot Dibi\">\r\n                    <span>Mot Dibi</span>\r\n                    <img *ngIf=\"sortBy === 'dibi' && sortOrder === 'cresc'\" src=\"./assets/chevron-up-solid.svg\">\r\n                    <img *ngIf=\"sortBy === 'dibi' && sortOrder === 'decresc'\" src=\"./assets/chevron-down-solid.svg\">\r\n                </div>\r\n                <div class=\"label-button-sort label-button-sort-fr\" (click)=\"setSort('french')\"\r\n                    title=\"Trier par mot Français>\">\r\n                    <span>Français</span>\r\n                    <img *ngIf=\"sortBy === 'french' && sortOrder === 'cresc'\" src=\"./assets/chevron-up-solid.svg\">\r\n                    <img *ngIf=\"sortBy === 'french' && sortOrder === 'decresc'\" src=\"./assets/chevron-down-solid.svg\">\r\n                </div>\r\n            </div>\r\n            <div class=\"middle\">\r\n            </div>\r\n            <div class=\"right\">\r\n                <div class=\"label-button-sort\" (click)=\"setSort('date')\" title=\"Trier par date d'ajout\">\r\n                    <span>Date ajout</span>\r\n                    <img *ngIf=\"sortBy === 'date' && sortOrder === 'cresc'\" src=\"./assets/chevron-up-solid.svg\">\r\n                    <img *ngIf=\"sortBy === 'date' && sortOrder === 'decresc'\" src=\"./assets/chevron-down-solid.svg\">\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div [ngClass]=\"advancedSearch ? 'list-advanced' : 'list-simple'\" *ngIf=\"filteredAllPages\">\r\n            <div class=\"row\" *ngFor=\"let word of filteredAllPages[currentPage]\">\r\n                <div class=\"view\" (click)=\"openDetail(word)\">\r\n                    <div class=\"left\">\r\n                        <div [className]=\"'dibi ' + word.partOfSpeech\">{{word.dibi}}</div>\r\n                        <div *ngIf=\"translate === 'French' || translate === 'Both'\" class=\"french\">{{word.french}}</div>\r\n                        <div *ngIf=\"translate === 'English' || translate === 'Both'\" class=\"english\">{{word.english}}\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"middle\">\r\n                    </div>\r\n                    <div class=\"right\">\r\n                        <div *ngIf=\"word.date\" class=\"date\" title=\"{{word.date | date:'dd/MM/YYYY - HH:mm:ss'}}\">\r\n                            {{word.date | date:'dd/MM/YYYY'}}</div>\r\n                    </div>\r\n                </div>\r\n                <div *ngIf=\"detail === word._id\" class=\"details\"\r\n                    id=\"{{word.dibi + '.' + word.french + '.' + word.date.toString}}\">\r\n                    <div class=\"block-detail-if-screen-too-small\">\r\n                        <div *ngIf=\"word.partOfSpeech\" class=\"block-detail\">\r\n                            <div class=\"label\"><span>Nature</span></div>\r\n                            <div class=\"value\">\r\n                                <ng-container [ngSwitch]=\"word.partOfSpeech\">\r\n                                    <div class=\"partOfSpeech-small-screen Noun\" *ngSwitchCase=\"'Noun'\">Nom</div>\r\n                                    <div class=\"partOfSpeech-small-screen Pronoun\" *ngSwitchCase=\"'Pronoun'\">Pronom\r\n                                    </div>\r\n                                    <div class=\"partOfSpeech-small-screen Verb\" *ngSwitchCase=\"'Verb'\">Verbe</div>\r\n                                    <div class=\"partOfSpeech-small-screen Adjective\" *ngSwitchCase=\"'Adjective'\">\r\n                                        Adjectif</div>\r\n                                    <div class=\"partOfSpeech-small-screen Adverb\" *ngSwitchCase=\"'Adverb'\">Adverbe</div>\r\n                                    <div class=\"partOfSpeech-small-screen Conjonction\" *ngSwitchCase=\"'Conjonction'\">\r\n                                        Conjonction</div>\r\n                                    <div class=\"partOfSpeech-small-screen Interjection\" *ngSwitchCase=\"'Interjection'\">\r\n                                        Interjection</div>\r\n                                    <div class=\"partOfSpeech-small-screen FunctionParticule\"\r\n                                        *ngSwitchCase=\"'FunctionParticule'\">\r\n                                        Particule de fonction</div>\r\n                                    <div class=\"partOfSpeech-small-screen TransformationParticule\"\r\n                                        *ngSwitchCase=\"'TransformationParticule'\">\r\n                                        Particule de transformation</div>\r\n                                    <div class=\"partOfSpeech-small-screen SpiritWord\" *ngSwitchCase=\"'SpiritWord'\">\r\n                                        Mot d'esprit</div>\r\n                                </ng-container>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div *ngIf=\"word.french\" class=\"block-detail\">\r\n                        <div class=\"label\"><span>Français</span></div>\r\n                        <div class=\"value\"><span>{{word.french}}</span></div>\r\n                    </div>\r\n                    <div *ngIf=\"word.english\" class=\"block-detail\">\r\n                        <div class=\"label\"><span>Anglais</span></div>\r\n                        <div class=\"value\"><span>{{word.english}}</span></div>\r\n                    </div>\r\n                    <div *ngIf=\"word.author\" class=\"block-detail\">\r\n                        <div class=\"label\"><span>Créateur</span></div>\r\n                        <div class=\"value\"><span>{{word.author}}</span></div>\r\n                    </div>\r\n                    <div *ngIf=\"word.description\" class=\"block-detail\">\r\n                        <div class=\"label\"><span>Description</span></div>\r\n                        <div class=\"value\"><span>{{word.description}}</span></div>\r\n                    </div>\r\n                    <div *ngIf=\"word.date\" class=\"block-detail\">\r\n                        <div class=\"label\"><span>Date d'ajout</span></div>\r\n                        <div class=\"value\"><span>{{word.date | date:'dd/MM/YYYY - HH:mm:ss'}}</span></div>\r\n                    </div>\r\n                    <div *ngIf=\"!word.author && !word.description && !word.date\" class=\"block-detail\">\r\n                        <span class=\"no-details\">Pas de détails</span>\r\n                    </div>\r\n                    <div *ngIf=\"adminConnected\" class=\"buttons-detail\">\r\n                        <img (click)=\"delete(word)\" src=\"./assets/trash-solid.svg\" title=\"Supprimer\">\r\n                        <img (click)=\"edit(word)\" src=\"./assets/pen-solid.svg\" title=\"Modifier\">\r\n                    </div>\r\n                    <div *ngIf=\"editing === word._id\" class=\"edit\">\r\n                        <div class='form-new-word'>\r\n                            <div class=\"mandatory\">\r\n                                <div class=\"block\">\r\n                                    <div class=\"label-input\">\r\n                                        <span class=\"label\">Dibi</span>\r\n                                        <input [className]=\"wordToEdit.partOfSpeech\" type=\"text\"\r\n                                            [(ngModel)]=\"wordToEdit.dibi\">\r\n                                    </div>\r\n                                    <span class=\"help\">Un mot commançant par une majuscule. Particules en minuscule avec\r\n                                        un \"-\".</span>\r\n                                </div>\r\n                                <div class=\"block\">\r\n                                    <div class=\"label-input\">\r\n                                        <span class=\"label\">Français</span>\r\n                                        <input type=\"text\" [(ngModel)]=\"wordToEdit.french\">\r\n                                    </div>\r\n                                    <span class=\"help\">Traduction en Français, un ou plusieurs mots commançant par des\r\n                                        majuscules, séparés par des virgules.</span>\r\n                                </div>\r\n                                <div class=\"block\">\r\n                                    <div class=\"label-input\">\r\n                                        <span class=\"label\">Anglais</span>\r\n                                        <input type=\"text\" [(ngModel)]=\"wordToEdit.english\">\r\n                                    </div>\r\n                                    <span class=\"help\">Traduction en Anglais, un ou plusieurs mots commançant par des\r\n                                        majuscules, séparés par des virgules. Facultatif.</span>\r\n                                </div>\r\n                                <div class=\"block\">\r\n                                    <div class=\"label-input\">\r\n                                        <span class=\"label\">Nature</span>\r\n                                        <select [className]=\"wordToEdit.partOfSpeech\"\r\n                                            [(ngModel)]=\"wordToEdit.partOfSpeech\">\r\n                                            <option value=\"Noun\">Nom</option>\r\n                                            <option value=\"Pronoun\">Pronom</option>\r\n                                            <option value=\"Verb\">Verbe</option>\r\n                                            <option value=\"Adjective\">Adjectif</option>\r\n                                            <option value=\"Adverb\">Adverbe</option>\r\n                                            <option value=\"Conjonction\">Conjonction</option>\r\n                                            <option value=\"Interjection\">Interjection</option>\r\n                                            <option value=\"FunctionParticule\">Particule de fonction</option>\r\n                                            <option value=\"TransformationParticule\">Particule de transformation</option>\r\n                                            <option value=\"SpiritWord\">Mot d'esprit</option>\r\n                                        </select>\r\n                                    </div>\r\n                                    <span class=\"help\">Nature grammaticale (ou classe grammaticale).</span>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"facultative\">\r\n                                <div class=\"block\">\r\n                                    <div class=\"label-input\">\r\n                                        <span class=\"label\">Créateur</span>\r\n                                        <input type=\"text\" [(ngModel)]=\"wordToEdit.author\" placeholder=\"pseudo#code\">\r\n                                    </div>\r\n                                    <span class=\"help\">Créateur du mot, celui qui l'a proposé à l'origine (pseudo\r\n                                        Discord).</span>\r\n                                </div>\r\n                                <div class=\"block\">\r\n                                    <div class=\"label-input\">\r\n                                        <span class=\"label\">Description</span>\r\n                                        <textarea name=\"new-word-description\" id=\"new-word-description\" rows=\"5\"\r\n                                            [(ngModel)]=\"wordToEdit.description\"></textarea>\r\n                                    </div>\r\n                                    <span class=\"help\">Description, étymologie, exemples, règles grammaticales, lore,\r\n                                        etc. Facultatif.</span>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"buttons\">\r\n                                <span [ngSwitch]=\"message.color\">\r\n                                    <p class=\"green-mes\" *ngSwitchCase=\"'green'\">{{message.mes}}</p>\r\n                                    <p class=\"yellow-mes\" *ngSwitchCase=\"'yellow'\">{{message.mes}}</p>\r\n                                    <p class=\"red-mes\" *ngSwitchCase=\"'red'\">{{message.mes}}</p>\r\n                                    <p *ngSwitchDefault></p>\r\n                                </span>\r\n                                <div class=\"right\">\r\n                                    <button (click)=\"edit(word)\">Annuler</button>\r\n                                    <button (click)=\"editWord()\">Modifier</button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <span *ngIf=\"!filteredDibiDict\">Chargement des mots Dibi...</span>\r\n    </div>\r\n</div>","import { Component, ElementRef, Input, OnInit, ViewChild, ViewEncapsulation } from '@angular/core';\n\n@Component({\n  selector: 'app-dibi-grammar',\n  templateUrl: './dibi-grammar.component.html',\n  styleUrls: ['./dibi-grammar.component.scss'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class DibiGrammarComponent implements OnInit {\n\n  @ViewChild('body') body: ElementRef;\n  @Input() adminConnected: boolean; // Si un administrateur est connecté\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  ngAfterViewInit() {\n    fetch('assets/HTML/grammar.html')\n      .then(r => r.text())\n      .then(data => {\n        this.body.nativeElement.innerHTML = data;\n      });\n  }\n\n}\n","<div class=\"grammar-bloc-body\" #body></div>","import { Component, Input, OnInit } from '@angular/core';\r\nimport { ChartOptions } from 'chart.js';\r\nimport { Socket } from 'ngx-socket-io';\r\nimport { DibiWord } from 'src/app/types';\r\n\r\n@Component({\r\n  selector: 'app-dibi-infos',\r\n  templateUrl: './dibi-infos.component.html',\r\n  styleUrls: ['./dibi-infos.component.scss']\r\n})\r\nexport class DibiInfosComponent implements OnInit {\r\n\r\n  @Input() dibiDict: DibiWord[]; // Dictionnaire récupéré du component principal\r\n\r\n  // Stats de répartition des natures gr.\r\n  nbPartsOfSpeech: any = [\r\n    { label: 'Noms', savedAs: 'Noun', nb: 0, color: '#8AE' },\r\n    { label: 'Pronoms', savedAs: 'Pronoun', nb: 0, color: '#8EE' },\r\n    { label: 'Verbes', savedAs: 'Verb', nb: 0, color: '#E88' },\r\n    { label: 'Adjectifs', savedAs: 'Adjective', nb: 0, color: '#8E8' },\r\n    { label: 'Adverbes', savedAs: 'Adverb', nb: 0, color: '#EA8' },\r\n    { label: 'Conjonctions', savedAs: 'Conjonction', nb: 0, color: '#E8E' },\r\n    { label: 'Particules de fonction', savedAs: 'FunctionParticule', nb: 0, color: '#EE8' },\r\n    { label: 'Particules de transformation', savedAs: 'TransformationParticule', nb: 0, color: '#EE8' },\r\n    { label: 'Mots d\\'esprit', savedAs: 'SpiritWord', nb: 0, color: '#395' },\r\n    { label: 'Interjections', savedAs: 'Interjection', nb: 0, color: '#A8E' }\r\n  ]\r\n\r\n  // Options Charts\r\n  options: ChartOptions = { aspectRatio: 1 }\r\n\r\n  // Pie Chart pour la répartition des natures gr.\r\n  pieChartLabels = [];\r\n  pieChartData = [];\r\n  pieChartColors: any = [{\r\n    backgroundColor: []\r\n  }];\r\n\r\n  // Bar Chart pour le nb de mots selon leur nature grammaticale en fonction du temps\r\n  numbersOfWords = {\r\n    Total: 0,\r\n    Noms: 0,\r\n    Pronoms: 0,\r\n    Verbes: 0,\r\n    Adjectifs: 0,\r\n    Adverbes: 0,\r\n    Conjonctions: 0,\r\n    'Particules de fonction': 0,\r\n    'Particules de transformation': 0,\r\n    'Mots d\\'esprit': 0,\r\n    Interjections: 0\r\n  };\r\n  barChartDataNG = [\r\n    { data: [], label: 'Noms', borderColor: '#8AE', backgroundColor: 'rgba(0, 0, 0, 0)', pointBackgroundColor: '#8AE' },\r\n    { data: [], label: 'Pronoms', borderColor: '#8EE', backgroundColor: 'rgba(0, 0, 0, 0)', pointBackgroundColor: '#8EE' },\r\n    { data: [], label: 'Verbes', borderColor: '#E88', backgroundColor: 'rgba(0, 0, 0, 0)', pointBackgroundColor: '#E88' },\r\n    { data: [], label: 'Adjectifs', borderColor: '#8E8', backgroundColor: 'rgba(0, 0, 0, 0)', pointBackgroundColor: '#8E8' },\r\n    { data: [], label: 'Adverbes', borderColor: '#EA8', backgroundColor: 'rgba(0, 0, 0, 0)', pointBackgroundColor: '#EA8' },\r\n    { data: [], label: 'Conjonctions', borderColor: '#E8E', backgroundColor: 'rgba(0, 0, 0, 0)', pointBackgroundColor: '#E8E' },\r\n    { data: [], label: 'Particules de fonction', borderColor: '#EE8', backgroundColor: 'rgba(0, 0, 0, 0)', pointBackgroundColor: '#EE8' },\r\n    { data: [], label: 'Particules de transformation', borderColor: '#EE8', backgroundColor: 'rgba(0, 0, 0, 0)', pointBackgroundColor: '#EE8' },\r\n    { data: [], label: 'Mots d\\'esprit', borderColor: '#395', backgroundColor: 'rgba(0, 0, 0, 0)', pointBackgroundColor: '#395' },\r\n    { data: [], label: 'Interjections', borderColor: '#A8E', backgroundColor: 'rgba(0, 0, 0, 0)', pointBackgroundColor: '#A8E' }\r\n  ];\r\n  barChartLabelsNG = [];\r\n  barChartOptionsNG = {\r\n    scaleShowVerticalLines: false,\r\n    responsive: true\r\n  };\r\n  barChartLegendNG = true;\r\n\r\n  // Bar Chart pour le nb de mots selon leur nature grammaticale en fonction du temps\r\n  barChartData = [\r\n    { data: [], label: 'Total mots', borderColor: '#d6d5d4', backgroundColor: 'rgba(240, 240, 240, 0.1)', pointBackgroundColor: '#cccbca' }\r\n  ];\r\n  barChartLabels = [];\r\n  barChartOptions = {\r\n    scaleShowVerticalLines: false,\r\n    responsive: true\r\n  };\r\n  barChartLegend = true;\r\n\r\n  constructor(private socket: Socket) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  /**\r\n   * Si un changement Angular est détecté, et qu'il s'agit de @Input() dibiDict\r\n   * Démarrage du traitement du dictionnaire\r\n   */\r\n   ngOnChanges (): void {\r\n    if (this.dibiDict) {\r\n      // Récupérations des stats de la répartition des natures gr. et nb mots langue\r\n      this.dibiDict.forEach(word => {\r\n        switch (word.partOfSpeech) {\r\n          case ('Noun'):\r\n            this.nbPartsOfSpeech.find(i => i.savedAs === 'Noun').nb++;\r\n            break;\r\n          case ('Pronoun'):\r\n            this.nbPartsOfSpeech.find(i => i.savedAs === 'Pronoun').nb++;\r\n            break;\r\n          case ('Verb'):\r\n            this.nbPartsOfSpeech.find(i => i.savedAs === 'Verb').nb++;\r\n            break;\r\n          case ('Adjective'):\r\n            this.nbPartsOfSpeech.find(i => i.savedAs === 'Adjective').nb++;\r\n            break;\r\n          case ('Adverb'):\r\n            this.nbPartsOfSpeech.find(i => i.savedAs === 'Adverb').nb++;\r\n            break;\r\n          case ('Conjonction'):\r\n            this.nbPartsOfSpeech.find(i => i.savedAs === 'Conjonction').nb++;\r\n            break;\r\n          case ('FunctionParticule'):\r\n            this.nbPartsOfSpeech.find(i => i.savedAs === 'FunctionParticule').nb++;\r\n            break;\r\n          case ('TransformationParticule'):\r\n            this.nbPartsOfSpeech.find(i => i.savedAs === 'TransformationParticule').nb++;\r\n            break;\r\n          case ('SpiritWord'):\r\n            this.nbPartsOfSpeech.find(i => i.savedAs === 'SpiritWord').nb++;\r\n            break;\r\n          case ('Interjection'):\r\n            this.nbPartsOfSpeech.find(i => i.savedAs === 'Interjection').nb++;\r\n            break;\r\n        }\r\n      });\r\n  \r\n      // Tri par nombre (stats de répartiotion des natures gr.)\r\n      this.nbPartsOfSpeech.sort((a, b) => {\r\n        if (a.nb < b.nb) {\r\n          return 1;\r\n        } else if (a.nb > b.nb) {\r\n          return -1;\r\n        } else {\r\n          return 0;\r\n        }\r\n      });\r\n  \r\n      // Construction du piechart des natures grammaticales\r\n      this.nbPartsOfSpeech.forEach(element => {\r\n        this.pieChartLabels.push(element.label);\r\n        this.pieChartData.push(element.nb);\r\n        this.pieChartColors[0].backgroundColor.push(element.color);\r\n      });\r\n  \r\n      // Construction du line chart du nb mots chaque jour\r\n      let day = this.datify(new Date(this.dibiDict[0].date));\r\n      this.barChartLabelsNG.push(day);\r\n      this.barChartLabels.push(day);\r\n      this.dibiDict.forEach(word => {\r\n        this.numbersOfWords.Total++; // Incrément des mots totaux\r\n        if (day === this.datify(new Date(word.date))) {\r\n          this.numbersOfWords[this.frenchify(word.partOfSpeech)]++; // Incrément du nombre de mots selon le nature gr.\r\n        } else {\r\n          // Ajout des nouveaux mots selon la date\r\n          this.barChartDataNG.forEach(elem => {\r\n            elem.data.push(this.numbersOfWords[elem.label]);\r\n          });\r\n          this.barChartData[0].data.push(this.numbersOfWords.Total);\r\n          // Mise à jour de la date suivante\r\n          day = this.datify(new Date(word.date));\r\n          this.barChartLabelsNG.push(day);\r\n          this.barChartLabels.push(day);\r\n          // Ajout du prochain mot (qui est passé en else car nouvelle date, mais qu'il faut compter)\r\n          this.numbersOfWords[this.frenchify(word.partOfSpeech)]++; // Incrément du nombre de mots selon le nature gr.\r\n        }\r\n      });\r\n      // Ajout des nouveaux mots selon la date\r\n      this.barChartDataNG.forEach(elem => {\r\n        elem.data.push(this.numbersOfWords[elem.label]);\r\n      });\r\n      this.barChartData[0].data.push(this.numbersOfWords.Total);\r\n  \r\n      // Tri par taille (stats de répartition des natures gr.)\r\n      this.barChartDataNG.sort((a, b) => {\r\n        if (a.data[a.data.length - 1] < b.data[b.data.length - 1]) {\r\n          return 1;\r\n        } else if (a.data[a.data.length - 1] > b.data[b.data.length - 1]) {\r\n          return -1;\r\n        } else {\r\n          return 0;\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Adapte une Date en format dd/mm/yyy\r\n   */\r\n  datify(date: Date): string {\r\n    let dd: any = date.getDate();\r\n    let mm: any = date.getMonth() + 1;\r\n    let yyyy: any = date.getFullYear();\r\n    if (dd < 10) {\r\n      dd = '0' + dd;\r\n    }\r\n    if (mm < 10) {\r\n      mm = '0' + mm;\r\n    }\r\n    return dd + '/' + mm + '/' + yyyy;\r\n  }\r\n\r\n  /**\r\n   * Donne la nature grammaticale fr à partir de l'anglaise\r\n   */\r\n  frenchify(partOfSpeech: string): string {\r\n    switch (partOfSpeech) {\r\n      case ('Noun'): return 'Noms'; break;\r\n      case ('Pronoun'): return 'Pronoms'; break;\r\n      case ('Verb'): return 'Verbes'; break;\r\n      case ('Adjective'): return 'Adjectifs'; break;\r\n      case ('Adverb'): return 'Adverbes'; break;\r\n      case ('Conjonction'): return 'Conjonctions'; break;\r\n      case ('FunctionParticule'): return 'Particules de fonction'; break;\r\n      case ('TransformationParticule'): return 'Particules de transformation'; break;\r\n      case ('SpiritWord'): return 'Mots d\\'esprit'; break;\r\n      case ('Interjection'): return 'Interjections'; break;\r\n    }\r\n  }\r\n\r\n}\r\n","<div class=\"body\">\r\n    <div class=\"container\">\r\n        <div class=\"header\">\r\n            <h1>Dibi Dictionary</h1>\r\n            <p>Dibi Dictionary a pour vocation de répertorier l'ensemble des mots de la langue Dibi. Un manuel de la\r\n                langue est aussi disponible.</p>\r\n            <h1>Ressources</h1>\r\n            <div class=\"logo-and-link\">\r\n                <div class=\"img\">\r\n                    <img src=\"assets/images/discord.png\" alt=\"Logo Discord\">\r\n                </div>\r\n                <a href=\"https://discord.gg/xSk3RMpEXB\" target=\"_blank\">Serveur Discord Dibi officiel</a>\r\n            </div>\r\n            <div class=\"logo-and-link\">\r\n                <div class=\"img\">\r\n                    <img src=\"assets/images/github.png\" alt=\"Logo GitHub\">\r\n                </div>\r\n                <a href=\"https://github.com/MarioVieilledent/DirtyPazu-Client\" target=\"_blank\">GitHub de la web app\r\n                    Angular</a>\r\n            </div>\r\n            <div class=\"logo-and-link\">\r\n                <div class=\"img\">\r\n                    <img src=\"assets/images/github.png\" alt=\"Logo GitHub\">\r\n                </div>\r\n                <a href=\"https://github.com/MarioVieilledent/DirtyPazu-Server/tree/NoGoogle\" target=\"_blank\">GitHub du\r\n                    serveur Node.js</a>\r\n            </div>\r\n            <div class=\"logo-and-link\">\r\n                <div class=\"img\">\r\n                    <img src=\"assets/images/json.png\" alt=\"Logo JSON\">\r\n                </div>\r\n                <a href=\"https://dibi-dictionary.herokuapp.com/dictionnary/getWords/all\" target=\"_blank\">Liste de tous\r\n                    les mots format JSON</a>\r\n            </div>\r\n        </div>\r\n        <div class=\"content\">\r\n            <h1>Statistiques</h1>\r\n            <div class=\"block\">\r\n                <div class=\"title\">\r\n                    <h2>Des chiffres</h2>\r\n                </div>\r\n                <div class=\"elements\">\r\n                    <div *ngIf=\"dibiDict\" class=\"element\">\r\n                        <h3>Mots Dibi</h3>\r\n                        <span class=\"number\">{{dibiDict.length}}</span>\r\n                    </div>\r\n                    <div *ngFor=\"let partOfSpeech of nbPartsOfSpeech\" class=\"element\">\r\n                        <h3 [className]=\"partOfSpeech.savedAs\">{{partOfSpeech.label}}</h3>\r\n                        <span [className]=\"'number ' + partOfSpeech.savedAs\">{{partOfSpeech.nb}}</span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"block chart\">\r\n                <div class=\"title\">\r\n                    <h2>Répartition des mots selon leur nature grammaticale</h2>\r\n                </div>\r\n                <!-- <canvas id=\"pieChart\" width=\"400\" height=\"400\"></canvas> -->\r\n                <canvas class=\"pie-chart\" baseChart [options]=\"options\" [data]=\"pieChartData\" [labels]=\"pieChartLabels\"\r\n                    [colors]=\"pieChartColors\" [chartType]=\"'pie'\"></canvas>\r\n            </div>\r\n            <div class=\"block chart\">\r\n                <div class=\"title\">\r\n                    <h2>Taille du dictionnaire en fonction du temps</h2>\r\n                </div>\r\n                <canvas class=\"line-chart\" baseChart [datasets]=\"barChartData\" [labels]=\"barChartLabels\"\r\n                    [options]=\"barChartOptions\" [legend]=\"barChartLegend\" [chartType]=\"'line'\">\r\n                </canvas>\r\n            </div>\r\n            <div class=\"block chart\">\r\n                <div class=\"title\">\r\n                    <h2>Nombres de mots dans le dictionnaire selon leur nature grammaticale en fonction du temps</h2>\r\n                </div>\r\n                <canvas class=\"line-chart\" baseChart [datasets]=\"barChartDataNG\" [labels]=\"barChartLabelsNG\"\r\n                    [options]=\"barChartOptionsNG\" [legend]=\"barChartLegendNG\" [chartType]=\"'line'\">\r\n                </canvas>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","import { Component, Input, OnInit } from '@angular/core';\r\nimport { Socket } from 'ngx-socket-io';\r\nimport { DibiWord } from 'src/app/types';\r\n\r\n@Component({\r\n  selector: 'app-dibi-new-word',\r\n  templateUrl: './dibi-new-word.component.html',\r\n  styleUrls: ['./dibi-new-word.component.scss']\r\n})\r\nexport class DibiNewWordComponent implements OnInit {\r\n\r\n  dibiDict: DibiWord[];\r\n\r\n  @Input() adminConnected: boolean; // Si un administrateur est connecté\r\n  @Input() pwd: string; // Pwd en localSorage pour plus rester connecté\r\n\r\n  message = { mes: '', color: '' };\r\n\r\n  newWord: DibiWord = {\r\n    dibi: '',\r\n    french: '',\r\n    english: '',\r\n    partOfSpeech: 'Noun',\r\n  }\r\n\r\n  constructor(private socket: Socket) { }\r\n\r\n  ngOnInit(): void {\r\n    this.socket.on('responseAddWord', (data) => {\r\n      if (data.status === 0) {\r\n        this.message = { mes: 'Succès', color: 'green' };\r\n        this.newWord.dibi = '';\r\n        this.newWord.french = '';\r\n        this.newWord.english = '';\r\n        // this.newWord.author = ''; // Auteur conservé\r\n        this.newWord.date = '';\r\n        this.newWord.description = '';\r\n      } else {\r\n        this.message = { mes: data.mes, color: 'red' };\r\n      }\r\n      // Clear du message au bout d'un certain délai\r\n      setTimeout(() => { this.message = { mes: '', color: '' }; }, 10000);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Ajoute un mot dans la bdd\r\n   */\r\n  addWord(): void {\r\n    if (!this.adminConnected) {\r\n      alert('Administrateur non connecté.');\r\n    } else {\r\n      this.newWord.date = new Date();\r\n      this.message = { mes: 'Enregistrement...', color: 'yellow' };\r\n      this.socket.emit('addWord', { newWord: this.newWord, pwd: this.pwd });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 1)\r\n   * Adapte automatique le formatage de la saisie des mots Dibis, Français et Anglais.\r\n   * Format = Majuscule au début du mot, le reste en minuscule.\r\n   * 2)\r\n   * Vérifie que le mot ne se termine par un espace\r\n   * 3)\r\n   * Scrute la terminaison du mot pour adapter sa nature grammaticale (uniquement si mot Dibi)\r\n   */\r\n  checkFormat(event: any, partOfSpeech: string): void {\r\n    // Setup\r\n    let value: string = event.target.value;\r\n    // Met tout en minuscule (qui le mot Dibi)\r\n    if (partOfSpeech === 'dibi') {\r\n      value = value.toLocaleLowerCase();\r\n    }\r\n    // Set de la première lettre en majuscule\r\n    value = value.charAt(0).toUpperCase() + value.slice(1);\r\n    // Suppression d'espaces à la fin (que le mot Dibi)\r\n    if (partOfSpeech === 'dibi') {\r\n      if (value.endsWith(' ')) {\r\n        value = value.slice(0, -1);\r\n      }\r\n    }\r\n    // Set du bon formatage du mot Dibi\r\n    this.newWord[partOfSpeech] = value;\r\n    // Auto adapt de la nature grammaticale\r\n    if (partOfSpeech === 'dibi') {\r\n      if (value.endsWith('e')) {\r\n        this.newWord.partOfSpeech = 'Verb';\r\n      } else if (value.endsWith('i') || value.endsWith('fo') || value.endsWith('ro') || value.endsWith('ti')) {\r\n        this.newWord.partOfSpeech = 'Noun';\r\n      } else if (value.endsWith('al')) {\r\n        this.newWord.partOfSpeech = 'Adjective';\r\n      } else if (value.endsWith('or')) {\r\n        this.newWord.partOfSpeech = 'Adverb';\r\n      }\r\n    }\r\n  }\r\n\r\n}\r\n","<div class=\"body\">\r\n    <div class=\"title-description\">\r\n        <h1>Ajouter un mot</h1>\r\n    </div>\r\n    <div class='form-new-word'>\r\n        <div class=\"mandatory\">\r\n            <div class=\"block\">\r\n                <div class=\"label-input\">\r\n                    <span class=\"label\">Dibi</span>\r\n                    <input [className]=\"newWord.partOfSpeech\" type=\"text\" (input)=\"checkFormat($event, 'dibi')\"\r\n                        [(ngModel)]=\"newWord.dibi\">\r\n                </div>\r\n                <span class=\"help\">Un mot commençant par une majuscule. Particules en minuscule avec un \"-\".</span>\r\n            </div>\r\n            <div class=\"block\">\r\n                <div class=\"label-input\">\r\n                    <span class=\"label\">Français</span>\r\n                    <input type=\"text\" (input)=\"checkFormat($event, 'french')\" [(ngModel)]=\"newWord.french\">\r\n                </div>\r\n                <span class=\"help\">Traduction en Français, un ou plusieurs mots commençant par des majuscules, séparés\r\n                    par des virgules.</span>\r\n            </div>\r\n            <div class=\"block\">\r\n                <div class=\"label-input\">\r\n                    <span class=\"label\">Anglais</span>\r\n                    <input type=\"text\" (input)=\"checkFormat($event, 'english')\" [(ngModel)]=\"newWord.english\">\r\n                </div>\r\n                <span class=\"help\">Traduction en Anglais, un ou plusieurs mots commençant par des majuscules, séparés\r\n                    par des virgules. Facultatif.</span>\r\n            </div>\r\n            <div class=\"block\">\r\n                <div class=\"label-input\">\r\n                    <span class=\"label\">Nature</span>\r\n                    <select [className]=\"newWord.partOfSpeech\" [(ngModel)]=\"newWord.partOfSpeech\">\r\n                        <option value=\"Noun\">Nom</option>\r\n                        <option value=\"Pronoun\">Pronom</option>\r\n                        <option value=\"Verb\">Verbe</option>\r\n                        <option value=\"Adjective\">Adjectif</option>\r\n                        <option value=\"Adverb\">Adverbe</option>\r\n                        <option value=\"Conjonction\">Conjonction</option>\r\n                        <option value=\"Interjection\">Interjection</option>\r\n                        <option value=\"FunctionParticule\">Particule de fonction</option>\r\n                        <option value=\"TransformationParticule\">Particule de transformation</option>\r\n                        <option value=\"SpiritWord\">Mot d'esprit</option>\r\n                    </select>\r\n                </div>\r\n                <span class=\"help\">Nature grammaticale (ou classe grammaticale).</span>\r\n            </div>\r\n        </div>\r\n        <div class=\"facultative\">\r\n            <div class=\"block\">\r\n                <div class=\"label-input\">\r\n                    <span class=\"label\">Créateur</span>\r\n                    <input type=\"text\" [(ngModel)]=\"newWord.author\" placeholder=\"pseudo#code\">\r\n                </div>\r\n                <span class=\"help\">Créateur du mot, celui qui l'a proposé à l'origine (pseudo Discord).</span>\r\n            </div>\r\n            <div class=\"block\">\r\n                <div class=\"label-input\">\r\n                    <span class=\"label\">Description</span>\r\n                    <textarea name=\"new-word-description\" id=\"new-word-description\" rows=\"5\"\r\n                        [(ngModel)]=\"newWord.description\"></textarea>\r\n                </div>\r\n                <span class=\"help\">Description, étymologie, exemples, règles grammaticales, lore, etc.\r\n                    Facultatif.</span>\r\n            </div>\r\n        </div>\r\n        <div class=\"buttons\">\r\n            <span [ngSwitch]=\"message.color\">\r\n                <p class=\"green-mes\" *ngSwitchCase=\"'green'\">{{message.mes}}</p>\r\n                <p class=\"yellow-mes\" *ngSwitchCase=\"'yellow'\">{{message.mes}}</p>\r\n                <p class=\"red-mes\" *ngSwitchCase=\"'red'\">{{message.mes}}</p>\r\n                <p *ngSwitchDefault></p>\r\n            </span>\r\n            <button (click)=\"addWord()\">Ajouter</button>\r\n        </div>\r\n    </div>\r\n    <div class=\"dict\" *ngIf=\"dibiDict\">\r\n        <h1>Liste</h1>\r\n        <div *ngFor=\"let word of dibiDict\">\r\n            <span>{{word.dibi}} - </span>\r\n            <span>{{word.french}} </span>\r\n            <span>({{word.partOfSpeech}})</span>\r\n        </div>\r\n    </div>\r\n</div>","import { Component, Input, OnInit } from '@angular/core';\r\nimport { SocialUser } from 'angularx-social-login';\r\nimport { Socket } from 'ngx-socket-io';\r\nimport { AccountSettings, DibiWord, DibiWordsSuggestion } from 'src/app/types';\r\n\r\n@Component({\r\n  selector: 'app-dibi-suggest',\r\n  templateUrl: './dibi-suggest.component.html',\r\n  styleUrls: ['./dibi-suggest.component.scss']\r\n})\r\nexport class DibiSuggestComponent implements OnInit {\r\n\r\n  @Input() dibiDict: DibiWord[];\r\n  @Input() suggestions: DibiWordsSuggestion[];\r\n  @Input() user: SocialUser;\r\n  @Input() accountSettings: AccountSettings;\r\n\r\n  allLoaded = false; // Attent que tous les éléments soit chargés depuis le component parent\r\n\r\n  dibiWordsSuggestion: DibiWordsSuggestion;\r\n\r\n  responseSuggestWord: string; // Message de succès ou d'erreur de suggestion\r\n  statusResponse: number; // Status de succès ou d'erreur\r\n\r\n  displaySendButton = false; // Affiche le boutton d'envoie une fois que tout est conforme\r\n\r\n  more = false; // Affiche plus d'infos sur la proposition d'un mot\r\n\r\n  constructor(private socket: Socket) { }\r\n\r\n  ngOnInit(): void {\r\n    // Récupération de la réponse serveur apprès proposition\r\n    this.socket.on('responseSuggestWord', data => {\r\n      this.responseSuggestWord = data.mes;\r\n      this.statusResponse = data.status;\r\n      if (data.status === 0) {\r\n        this.dibiWordsSuggestion = {\r\n          version: 1,\r\n          author: this.user.email,\r\n          words: [{\r\n            dibis: [{ dibi: '' }],\r\n            french: '',\r\n            partOfSpeech: 'Noun'\r\n          }],\r\n          optionsDescription: [''],\r\n          description: '',\r\n          upVotes: [],\r\n          downVotes: [],\r\n          comments: [],\r\n          state: 'suggested'\r\n        }\r\n      }\r\n      setTimeout(() => {\r\n        this.responseSuggestWord = undefined;\r\n        this.statusResponse = undefined;\r\n      }, 30000);\r\n    });\r\n  }\r\n\r\n  ngOnChanges(): void {\r\n    // Une fois que tous les éléments en inputs sont biens chargés\r\n    if (this.dibiDict && this.suggestions && this.user && this.accountSettings && !this.allLoaded) {\r\n      this.allLoaded = true;\r\n      // Création de l'objet js dibiWordsSuggestion\r\n      this.dibiWordsSuggestion = {\r\n        version: 1,\r\n        author: this.user.email,\r\n        words: [{\r\n          dibis: [{ dibi: '' }],\r\n          french: '',\r\n          partOfSpeech: 'Noun'\r\n        }],\r\n        optionsDescription: [''],\r\n        description: '',\r\n        upVotes: [],\r\n        downVotes: [],\r\n        comments: [],\r\n        state: 'suggested'\r\n      };\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Ajoute un mot à la liste des mots suggérés\r\n   */\r\n  addWord(): void {\r\n    // Ajout d'un mot jusqu'à 12 maximum pour une suggestion\r\n    if (this.dibiWordsSuggestion.words.length < 12) {\r\n      let temp = [];\r\n      this.dibiWordsSuggestion.words[0].dibis.forEach(() => {\r\n        temp.push({ dibi: '' });\r\n      });\r\n      this.dibiWordsSuggestion.words.push({\r\n        dibis: temp,\r\n        french: '',\r\n        partOfSpeech: 'Noun'\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Retire un pot spécifique de la liste des mots suggérés\r\n   */\r\n  removeWord(index: number): void {\r\n    this.dibiWordsSuggestion.words.splice(index, 1);\r\n  }\r\n\r\n  /**\r\n   * Ajoute une option de mot dibi à tous les mots\r\n   */\r\n  addDibiOption(): void {\r\n    // Enlevement d'une option jusqu'à 12 maximum\r\n    if (this.dibiWordsSuggestion.words[0].dibis.length < 12) {\r\n      // Modification de toutes les options de chaque mot\r\n      this.dibiWordsSuggestion.words.forEach(word => {\r\n        word.dibis.push({ dibi: '' });\r\n      });\r\n      // Modification du nombre de descriptions\r\n      this.dibiWordsSuggestion.optionsDescription.push('');\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Enlève une option (la dernière) de mot dibi à tous les mots\r\n   */\r\n  removeDibiOption(): void {\r\n    // Enlevement d'une option sauf s'il en reste qu'une\r\n    if (this.dibiWordsSuggestion.words[0].dibis.length > 1) {\r\n      // Modification de toutes les options de chaque mot\r\n      this.dibiWordsSuggestion.words.forEach(word => {\r\n        word.dibis.pop();\r\n      });\r\n      // Modification du nombre de descriptions\r\n      this.dibiWordsSuggestion.optionsDescription.pop();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Propose un mot en l'ajoutant dans la bdd\r\n   */\r\n  check(): void {\r\n    // Vérification de la conformité des données\r\n    this.responseSuggestWord = undefined;\r\n    this.statusResponse = undefined;\r\n    let isValid = true;\r\n    this.dibiWordsSuggestion.words.forEach(word => {\r\n      if (!word.french) {\r\n        isValid = false;\r\n      }\r\n      word.dibis.forEach(option => {\r\n        if (!option.dibi) {\r\n          isValid = false;\r\n        }\r\n      })\r\n    });\r\n    if (isValid) {\r\n      this.displaySendButton = true;\r\n      this.responseSuggestWord = 'Ok';\r\n      this.statusResponse = 0;\r\n      setTimeout(() => {\r\n        this.responseSuggestWord = undefined;\r\n        this.statusResponse = undefined;\r\n      }, 10000);\r\n    } else {\r\n      this.responseSuggestWord = 'Tous les champs obligatoires ne sont pas remplis';\r\n      this.statusResponse = 1;\r\n      setTimeout(() => {\r\n        this.responseSuggestWord = undefined;\r\n        this.statusResponse = undefined;\r\n      }, 10000);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Envoie la suggestion au serveur\r\n   */\r\n  sendSuggestion(): void {\r\n    this.responseSuggestWord = undefined;\r\n    this.statusResponse = undefined;\r\n    this.displaySendButton = false;\r\n    this.socket.emit('sendSuggestion', this.dibiWordsSuggestion);\r\n  }\r\n\r\n  /**\r\n   * Affiche ou masque plus d'infos\r\n   */\r\n  toggleMoreInfos(b: boolean): void {\r\n    this.more = b;\r\n  }\r\n\r\n}\r\n","<div class=\"body\">\r\n    <div class=\"title-description\">\r\n        <h1>Proposer</h1>\r\n        <span>Un ou plusieurs mots de la même famille</span>\r\n    </div>\r\n    <div class=\"word-and-help\" *ngIf=\"user\">\r\n        <div class=\"all-fields\" *ngIf=\"allLoaded && dibiWordsSuggestion\">\r\n            <div class=\"dibis\">\r\n                <div class=\"dibis-suggestions\">\r\n                    <span>{{dibiWordsSuggestion.words[0].dibis.length > 1 ?\r\n                        'Plusieurs versions à voter' : 'Une seule version dibi'}}</span>\r\n                    <img src=\"assets/minus-solid.svg\" title=\"Enlever proposition Dibi\" (click)=\"removeDibiOption()\">\r\n                    <img src=\"assets/plus-solid.svg\" title=\"Ajouter proposition Dibi\" (click)=\"addDibiOption()\">\r\n                </div>\r\n                <ng-container *ngIf=\"dibiWordsSuggestion.words[0].dibis.length > 1\">\r\n                    <div class=\"description-dibi\"\r\n                        *ngFor=\"let option of dibiWordsSuggestion.words[0].dibis; let indexOption = index\">\r\n                        <img src=\"assets/discord_emojis/letter_{{indexOption}}.svg\">\r\n                        <input placeholder=\"origine, provenance, racine\" type=\"text\"\r\n                            [(ngModel)]=\"dibiWordsSuggestion.optionsDescription[indexOption]\">\r\n                    </div>\r\n                </ng-container>\r\n            </div>\r\n            <div class=\"table\">\r\n                <div class=\"row-header\">\r\n                    <div class=\"option\" *ngFor=\"let word of dibiWordsSuggestion.words; let index = index;\">\r\n                        <div class=\"header-span-and-icon\">\r\n                            <span>Mot {{index + 1}}</span>\r\n                            <img *ngIf=\"index > 0\" src=\"assets/trash-solid.svg\" title=\"Retirer le mot\"\r\n                                (click)=\"removeWord(index)\">\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"last-column\">\r\n                        <img src=\"assets/plus-solid.svg\" title=\"Nouveau mot\" (click)=\"addWord()\">\r\n                    </div>\r\n                </div>\r\n                <div class=\"row-dibis\">\r\n                    <div class=\"option\" *ngFor=\"let word of dibiWordsSuggestion.words; let index = index;\">\r\n                        <div class=\"block block-multiple\" *ngFor=\"let dibi of word.dibis; let indexDibi = index\">\r\n                            <div class=\"top\">\r\n                                <div class=\"img-and-label\">\r\n                                    <img *ngIf=\"dibiWordsSuggestion.words[0].dibis.length > 1\"\r\n                                        src=\"assets/discord_emojis/letter_{{indexDibi}}.svg\">\r\n                                    <span>Dibi</span>\r\n                                </div>\r\n                                <img src=\"assets/mandatory.svg\" *ngIf=\"!word.dibis[indexDibi].dibi\">\r\n                            </div>\r\n                            <div class=\"bottom-input\">\r\n                                <input [className]=\"word.partOfSpeech\" type=\"text\"\r\n                                    [(ngModel)]=\"word.dibis[indexDibi].dibi\" (input)=\"displaySendButton = false\">\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"last-column\">\r\n                    </div>\r\n                </div>\r\n                <div class=\"row-french\">\r\n                    <div class=\"option\" *ngFor=\"let word of dibiWordsSuggestion.words; let index = index;\">\r\n                        <div class=\"block\">\r\n                            <div class=\"top\">\r\n                                <div class=\"img-and-label\">\r\n                                    <span>Français</span>\r\n                                </div>\r\n                                <img src=\"assets/mandatory.svg\" *ngIf=\"!word.french\">\r\n                            </div>\r\n                            <div class=\"bottom-input\">\r\n                                <input type=\"text\" [(ngModel)]=\"word.french\" (input)=\"displaySendButton = false\">\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"last-column\">\r\n                    </div>\r\n                </div>\r\n                <div class=\"row-english\">\r\n                    <div class=\"option\" *ngFor=\"let word of dibiWordsSuggestion.words; let index = index;\">\r\n                        <div class=\"block\">\r\n                            <div class=\"top\">\r\n                                <div class=\"img-and-label\">\r\n                                    <span>Anglais</span>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"bottom-input\">\r\n                                <input type=\"text\" [(ngModel)]=\"word.english\">\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"last-column\">\r\n                    </div>\r\n                </div>\r\n                <div class=\"row-part-of-speech\">\r\n                    <div class=\"option\" *ngFor=\"let word of dibiWordsSuggestion.words; let index = index;\">\r\n                        <div class=\"block\">\r\n                            <div class=\"top\">\r\n                                <div class=\"img-and-label\">\r\n                                    <span>Nature grammaticale</span>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"bottom-input\">\r\n                                <select [className]=\"word.partOfSpeech\" [(ngModel)]=\"word.partOfSpeech\">\r\n                                    <option value=\"Noun\">Nom</option>\r\n                                    <option value=\"Pronoun\">Pronom</option>\r\n                                    <option value=\"Verb\">Verbe</option>\r\n                                    <option value=\"Adjective\">Adjectif</option>\r\n                                    <option value=\"Adverb\">Adverbe</option>\r\n                                    <option value=\"Conjonction\">Conjonction</option>\r\n                                    <option value=\"Interjection\">Interjection</option>\r\n                                    <option value=\"Particule\">Particule</option>\r\n                                    <option value=\"SpiritWord\">Mot d'esprit</option>\r\n                                </select>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"last-column\">\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"description\">\r\n                <span>Description {{dibiWordsSuggestion.words.length === 1 ? 'du mot' : 'des mots'}}</span>\r\n                <textarea [(ngModel)]=\"dibiWordsSuggestion.description\" rows=\"5\"></textarea>\r\n            </div>\r\n            <div class=\"send\">\r\n                <div class=\"row row-1\">\r\n                    <div>\r\n                        <span *ngIf=\"statusResponse === 1\" class=\"message-error\">{{responseSuggestWord}}</span>\r\n                        <span *ngIf=\"statusResponse === 0\" class=\"message-success\">{{responseSuggestWord}}</span>\r\n                    </div>\r\n                    <div>\r\n                        <button (click)=\"check()\">Vérifier</button>\r\n                    </div>\r\n                </div>\r\n                <div class=\"row row-2\" *ngIf=\"displaySendButton\">\r\n                    <div>\r\n                        <span class=\"message-success\">Veuillez vérifier votre proposition avant de l'envoyer</span>\r\n                    </div>\r\n                    <div>\r\n                        <button (click)=\"sendSuggestion()\">Proposer</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"bottom\">\r\n                <div class=\"bottom-title\">\r\n                    <img class=\"chevron-more\" *ngIf=\"!more\" src=\"assets/circle-info-solid.svg\"\r\n                        (click)=\"toggleMoreInfos(true)\">\r\n                    <img class=\"chevron-more\" *ngIf=\"more\" src=\"assets/circle-info-solid.svg\"\r\n                        (click)=\"toggleMoreInfos(false)\">\r\n                    <h2 *ngIf=\"more\">Processus proposition d'un mot</h2>\r\n                </div>\r\n                <div class=\"help\" *ngIf=\"more\">\r\n                    <p>1) Tout le monde peut proposer un ou plusieurs mots de la même famille (nom, verbe, adjectif,\r\n                        etc.)en complétant un maximum d'informations.</p>\r\n                    <p>2) Une fois proposée, la suggestion est votée.\r\n                    </p>\r\n                    <p>3) À partir d'un certain nombre de vote positifs, la suggestion est acceptable et attend la\r\n                        validation\r\n                        des admins.</p>\r\n                    <p>6) Si le mot n'est pas accepté par les admins, l'utilisateur qui a proposé le mot peut modifier\r\n                        sa proposition en fonction des commentaires des admins.</p>\r\n                    <p>4) Si les admins l'acceptent, le mot est ajouté au dictionnaire.</p>\r\n                    <p>5) Si le mot n'est pas accepté par les membres, l'utilisateur qui a proposé le mot peut modifier\r\n                        sa proposition en fonction des commentaires.</p>\r\n                    <p>7) Lorsque le mot est de nouveau modifié, le cycle recommence.</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"\" *ngIf=\"!allLoaded\">\r\n            <span class=\"not-connected\">Vous devez vous connecter via Google pour proposer un mot.</span>\r\n        </div>\r\n    </div>\r\n    <div class=\"\" *ngIf=\"!user\">\r\n        <span class=\"not-connected\">Vous devez vous connecter via Google pour proposer un mot.</span>\r\n    </div>\r\n</div>","import { Component, Input, OnInit } from '@angular/core';\r\nimport { SocialUser } from 'angularx-social-login';\r\nimport { Socket } from 'ngx-socket-io';\r\nimport { AccountSettings, DibiWord, DibiWordsSuggestion } from 'src/app/types';\r\n\r\n@Component({\r\n  selector: 'app-dibi-vote',\r\n  templateUrl: './dibi-vote.component.html',\r\n  styleUrls: ['./dibi-vote.component.scss']\r\n})\r\nexport class DibiVoteComponent implements OnInit {\r\n\r\n  @Input() dibiDict: DibiWord[];\r\n  @Input() suggestions: DibiWordsSuggestion[];\r\n  @Input() user: SocialUser;\r\n  @Input() accountSettings: AccountSettings;\r\n  @Input() profiles: any;\r\n\r\n  allLoaded = false; // Attent que tous les éléments soit chargés depuis le component parent\r\n\r\n  constructor(private socket: Socket) { }\r\n\r\n  ngOnInit(): void {\r\n\r\n  }\r\n\r\n  ngOnChanges(): void {\r\n    // Une fois que tous les éléments en inputs sont biens chargés\r\n    if (this.dibiDict && this.suggestions && this.user && this.accountSettings && this.profiles && !this.allLoaded) {\r\n      this.allLoaded = true;\r\n    }\r\n  }\r\n\r\n}\r\n","<div class=\"body\">\r\n    <div class=\"container\">\r\n        <div class=\"options\">\r\n\r\n        </div>\r\n        <div class=\"table\" *ngIf=\"allLoaded\">\r\n            <div class=\"row-header\">\r\n                <!-- <div class=\"state\">\r\n                    <span>État</span>\r\n                </div> -->\r\n                <div class=\"author-date\">\r\n                    <span>Auteur et date</span>\r\n                </div>\r\n                <div class=\"suggestion\">\r\n                    <span>Suggestion</span>\r\n                </div>\r\n                <div class=\"vote\">\r\n                    <span>Vote</span>\r\n                </div>\r\n                <div class=\"admin\">\r\n                    <span>Admin</span>\r\n                </div>\r\n            </div>\r\n            <div class=\"row-suggestion\" *ngFor=\"let suggestion of suggestions\">\r\n                <!-- <div class=\"state\">\r\n                    <ng-container [ngSwitch]=\"suggestion.state\">\r\n                        <img *ngSwitchCase=\"'suggested'\" src=\"assets/discord_emojis/bulb.svg\">\r\n                        <img *ngSwitchCase=\"'modified'\" src=\"assets/discord_emojis/bulb.svg\">\r\n                        <img *ngSwitchCase=\"'accepted'\" src=\"assets/discord_emojis/white_check_mark.svg\">\r\n                        <img *ngSwitchCase=\"'refused'\" src=\"assets/discord_emojis/no_entry_sign.svg\">\r\n                        <img *ngSwitchCase=\"'added'\" src=\"assets/discord_emojis/bookmark.svg\">\r\n                    </ng-container>\r\n                </div> -->\r\n                <div class=\"author-date\">\r\n                    <div class=\"author\">\r\n                        <div class=\"profile-picture\">\r\n                            <img src=\"{{profiles[suggestion.author].user.photoUrl}}\">\r\n                        </div>\r\n                        <div class=\"names\">\r\n                            <!-- <span>{{profiles[suggestion.author].user.name}}</span> -->\r\n                            <span>{{profiles[suggestion.author].discordPseudo}}#{{profiles[suggestion.author].discordTag}}</span>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"date\">\r\n                        <span>{{suggestion.date | date:'dd/MM/YYYY - HH:mm:ss'}}</span>\r\n                    </div>\r\n                </div>\r\n                <div class=\"suggestion\">\r\n                    <div class=\"word\" *ngFor=\"let word of suggestion.words\">\r\n                        <div class=\"french\">\r\n                            <span>{{word.french + (word.english ? ' / ' + word.english : '')}}</span>\r\n                        </div>\r\n                        <div class=\"dibis\">\r\n                            <div class=\"dibi\" *ngFor=\"let dibi of word.dibis; let indexDibi = index;\">\r\n                                <img *ngIf=\"word.dibis.length > 1\" src=\"assets/discord_emojis/letter_{{indexDibi}}.svg\">\r\n                                <span [className]=\"word.partOfSpeech\">{{dibi.dibi}}</span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"description\">\r\n                        <span>{{suggestion.description}}</span>\r\n                    </div>\r\n                </div>\r\n                <div class=\"vote\">\r\n                    <div class=\"vote-and-comment\">\r\n                        <div class=\"two-arrows\">\r\n                            <div class=\"arrow-value\">\r\n                                <img src=\"assets/discord_emojis/arrow_up.svg\">\r\n                                <span>{{suggestion.upVotes.length}}</span>\r\n                            </div>\r\n                            <div class=\"arrow-value\">\r\n                                <img src=\"assets/discord_emojis/arrow_down.svg\">\r\n                                <span>{{suggestion.downVotes.length}}</span>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"comment\">\r\n                            <img src=\"assets/discord_emojis/comment.svg\">\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"choose-dibi-option\" *ngIf=\"suggestion.words[0].dibis.length > 1\">\r\n                        <div class=\"option-stars\" *ngFor=\"let item of suggestion.words[0].dibis\">\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"admin\">\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","import { Component, Input, OnInit, SimpleChanges } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Pixel, Region } from 'src/app/types';\r\nimport { concat, Observable } from 'rxjs';\r\nimport { tap, map } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'app-flag',\r\n  templateUrl: './flag.component.html',\r\n  styleUrls: ['./flag.component.scss']\r\n})\r\nexport class FlagComponent implements OnInit {\r\n\r\n  url = 'https://api-flag.fouloscopie.com/flag';\r\n  jsonFlag = './assets/flag.json';\r\n  jsonRegions = './assets/regions.json';\r\n\r\n  stateFechFlag: number = 0; // Etat de la requête flag à Fouloscopie\r\n  flag: Pixel[]; // Drapeau récupéré de Fouloscopie\r\n  regions: Region[]; // Régions\r\n\r\n  nb: number; // Nombre exact de pixels\r\n  i: number; // Nombre de lignes (calculé en fonction de nb)\r\n  j: number; // Nombre de colonnes (calculé en fonction de i)\r\n\r\n  @Input() pixelSize: number; // Taille d'un pixel, récupéré du component main, sélectionnable par l'utilisateur\r\n  @Input() displayRegions: boolean; // Affichage des départements\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  ngOnInit(): void {\r\n\r\n    concat(\r\n      this.fetchRegions(),\r\n      this.fetchFlag()\r\n      ).subscribe(\r\n        data => { },\r\n        err => { console.error(err.message); },\r\n        () => { \r\n          this.buildFlag();\r\n        }\r\n      )\r\n  }\r\n\r\n  ngOnChanges(change: SimpleChanges) {\r\n    this.display();\r\n  }\r\n\r\n  fetchRegions(): Observable<any> {\r\n    return this.http.get<Region[]>(this.jsonRegions).pipe(tap(\r\n      data => {\r\n        this.regions = data;\r\n      }\r\n    ));\r\n  }\r\n\r\n  fetchFlag(): Observable<any> {\r\n    this.stateFechFlag = 1;\r\n    const httpOptions = {\r\n      headers: new HttpHeaders({ \r\n        'Access-Control-Allow-Origin': '*',\r\n        'Authorization': 'authkey',\r\n        'userid': '1'\r\n      })\r\n    };\r\n    return this.http.get<Pixel[]>(this.url, httpOptions).pipe(tap(\r\n      data => {\r\n        this.stateFechFlag = 2;\r\n        this.flag = data;\r\n      }\r\n    ));\r\n  }\r\n\r\n  buildFlag(): void {\r\n    this.nb = this.flag.length; // Nombre exact de pixels\r\n    this.i = Math.ceil(Math.sqrt(this.nb / 2)); // Nombre de lignes (calculé en fonction de nb)\r\n    this.j = this.i * 2; // Nombre de colonnes (calculé en fonction de i)\r\n\r\n    let n = 0; // L'index du pixel qu'on traite actuellement\r\n    let iter = 1; // L'itération qui se termine par le mouvement vers la droite\r\n\r\n    while(n <= this.nb) {\r\n      for (let x = 1; x <= iter; x++) {\r\n        if (n < this.nb) {\r\n          this.flag[n].coord = { i: x, j: (iter * 2 - 1)};\r\n        }\r\n        n++;\r\n      }\r\n      for (let x = 1; x <= iter; x++) {\r\n        if (n < this.nb) {\r\n          this.flag[n].coord = { i: x, j: (iter * 2)};\r\n        }\r\n        n++;\r\n      }\r\n      for (let x = 1; x <= iter * 2; x++) {\r\n        if (n < this.nb) {\r\n          this.flag[n].coord = { i: (iter + 1), j: x};\r\n        }\r\n        n++;\r\n      }\r\n      iter++;\r\n    }\r\n\r\n    this.display();\r\n  }\r\n\r\n  display(): void {\r\n    let canvas: any = document.getElementById('flag-canvas');\r\n    canvas.style.width = (this.j * this.pixelSize) + 'px';\r\n    canvas.style.height = (this.i * this.pixelSize) + 'px';\r\n    let ctx = canvas.getContext('2d');\r\n    ctx.canvas.width = (this.j * this.pixelSize);\r\n    ctx.canvas.height = (this.i * this.pixelSize);\r\n    ctx.beginPath();\r\n\r\n    // Affichage des pixels\r\n    for (let x = 0; x < this.nb; x++) {\r\n      const p = this.flag[x];\r\n      ctx.fillStyle = p.hexColor;\r\n      ctx.fillRect(((p.coord.j - 1) * this.pixelSize), ((p.coord.i - 1) * this.pixelSize), this.pixelSize, this.pixelSize);\r\n    }\r\n\r\n    // Affichage des régions\r\n    if (this.displayRegions) {\r\n      this.regions.forEach(region => {\r\n        ctx.fillStyle = 'rgba(' + Math.floor(Math.random() * 256) + ', ' + Math.floor(Math.random() * 256) + ', ' + Math.floor(Math.random() * 256) + ', 0.4)';\r\n        ctx.fillRect(((region.lowerJ - 1) * this.pixelSize), ((region.lowerI - 1) * this.pixelSize), (((region.upperJ - region.lowerJ) + 1) * this.pixelSize), (((region.upperI - region.lowerI) + 1) * this.pixelSize));\r\n        ctx.fillStyle = '#000000';\r\n        ctx.strokeRect(((region.lowerJ - 1) * this.pixelSize), ((region.lowerI - 1) * this.pixelSize), (((region.upperJ - region.lowerJ) + 1) * this.pixelSize), (((region.upperI - region.lowerI) + 1) * this.pixelSize));\r\n      });\r\n      ctx.closePath();\r\n    }\r\n  }\r\n\r\n}\r\n","<div class=\"body\">\r\n    <h1 *ngIf=\"stateFechFlag < 2\">Chargement du drapeau...</h1>\r\n    <canvas id=\"flag-canvas\" class=\"flag-canvas\"></canvas>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-infos',\r\n  templateUrl: './infos.component.html',\r\n  styleUrls: ['./infos.component.scss']\r\n})\r\nexport class InfosComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"body\">\r\n    <h2>Bienvenue sur le site DibiDict !</h2>\r\n    <span>Ici, tous les mots de la langues sont répertoriés dans le dictionnaire.</span>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { Socket } from 'ngx-socket-io';\r\nimport { Log } from 'src/app/types';\r\n\r\n@Component({\r\n  selector: 'app-logs',\r\n  templateUrl: './logs.component.html',\r\n  styleUrls: ['./logs.component.scss']\r\n})\r\nexport class LogsComponent implements OnInit {\r\n\r\n  logs: Log[];\r\n\r\n  constructor(private socket: Socket) { }\r\n\r\n  ngOnInit(): void {\r\n    \r\n    // Demande des logs\r\n    this.socket.emit('fetchLogs', { });\r\n\r\n    this.socket.on('responseLogs', data => {\r\n      this.logs = data.logs.reverse();\r\n    });\r\n\r\n  }\r\n\r\n}\r\n","\r\n<div class=\"body\">\r\n    <div class=\"container\">\r\n        <div class=\"header\">\r\n            <div class=\"left\">\r\n            </div>\r\n            <div class=\"middle\">\r\n                <h3>Logs base de données</h3>\r\n            </div>\r\n            <div class=\"right\">\r\n            </div>\r\n        </div>\r\n        <div *ngIf=\"logs\" class=\"list\">\r\n            <div class=\"log\" *ngFor=\"let log of logs\">\r\n                <div class=\"timestamp\">\r\n                    <span>{{log.timestamp | date:'dd/MM/y - HH:mm:ss'}}</span>\r\n                </div>\r\n                <div class=\"message\">\r\n                    <span>{{log.message}}</span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\r\nimport { SocialAuthService, SocialUser } from 'angularx-social-login';\r\nimport { GoogleLoginProvider } from \"angularx-social-login\";\r\nimport { Socket } from 'ngx-socket-io';\r\nimport { AccountSettings, DibiWord, DibiWordsSuggestion, PageName } from '../types';\r\n\r\n@Component({\r\n  selector: 'app-main',\r\n  templateUrl: './main.component.html',\r\n  styleUrls: ['./main.component.scss']\r\n})\r\nexport class MainComponent implements OnInit {\r\n\r\n  messageServeur: string;\r\n  navigation: PageName = 'Dibi-infos'; // Navigation entre les pages\r\n\r\n  dibiDict: DibiWord[]; // Dictionnaire Dibi\r\n  suggestions: DibiWordsSuggestion[]; // Suggestions\r\n\r\n  user: SocialUser; // Utilisateur Google\r\n  accountSettings: AccountSettings; // Options du compte à enregistrer sur la db\r\n\r\n  profiles: any; // Options des profils (comptes utilisateur)\r\n\r\n  pixelSize: number = 2;\r\n  displayRegions = false;\r\n\r\n  menuDisplayed = true;\r\n  @ViewChild('nav') nav: ElementRef;\r\n  @ViewChild('content') content: ElementRef;\r\n\r\n  adminConnected: boolean; // Si un administrateur est connecté\r\n  pwd: string; // Mot de passe en base 64 permettant le fonctionnement des requêtes serveur\r\n\r\n  userMenu = false; // À true, ouvre la page de connexion et manage de comptes\r\n\r\n  constructor(private socket: Socket, private authService: SocialAuthService) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n\r\n    // Récupération du dictionnaire\r\n    this.socket.on('loadDict', (data) => {\r\n      this.dibiDict = data.dict;\r\n      // Après avoir reçu le dictionnaire, demande des suggestions\r\n      this.socket.emit('fetchSuggestions', {});\r\n    });\r\n\r\n    // Récupération des suggestions\r\n    this.socket.on('loadSuggestions', list => {\r\n      this.suggestions = list;\r\n      // Après avoir reçu les suggestions, demande des profils\r\n      this.socket.emit('fetchProfiles', {});\r\n    });\r\n\r\n    // Récupération des profils\r\n    this.socket.on('loadProfiles', profiles => {\r\n      // Création d'un dictionnaire de profils pour une utilisation plus facile\r\n      this.profiles = {};\r\n      profiles.forEach(profil => {\r\n        this.profiles[profil.email] = profil;\r\n      });\r\n    });\r\n\r\n    // Confirmation du paramétrage du compte avec pseudo Discord pour pouvoir accéder à la suite du site\r\n    this.socket.on('accountSetingsOk', user => {\r\n      setTimeout(() => {\r\n        this.socket.emit('loadProfile', user); // Connexion après une seconde pour s'assurer que le pseudo discord soit bien enregistré\r\n      }, 1000);\r\n    });\r\n\r\n    // Si une fenêtre de navigation est en localStorage, on l'affiche au démarrage\r\n    if (window.localStorage.getItem('nav')) {\r\n      this.navigation = window.localStorage.getItem('nav') as PageName;\r\n    }\r\n\r\n    // Si un pwd admin est en localStorage, on tente de se connecter\r\n    if (window.localStorage.getItem('pwd')) {\r\n      this.socket.emit('login', { pwd: window.localStorage.getItem('pwd') });\r\n    }\r\n\r\n    // Le serveur valide que ce client est admin\r\n    this.socket.on('trust', data => {\r\n      this.setAdminConnected(true);\r\n      window.localStorage.setItem('pwd', data.pwd);\r\n    });\r\n\r\n    // En réponse à la demande d'informations supplémentaires sur le profil, les charges et affiches les informations compte Google (on est connecté)\r\n    this.socket.on('responseProfile', data => {\r\n      this.user = data.user;\r\n      if (data.accountSettings) {\r\n        this.accountSettings = data.accountSettings;\r\n      } else {\r\n      }\r\n    });\r\n\r\n    // Prépare la réception de la connexion\r\n    this.authService.authState.subscribe((user) => {\r\n      // Récupère les infos de l'utilisateur Google et requête le serveur pour avoir les informations supplémentaires du profil\r\n      if (user) {\r\n        this.socket.emit('loadProfile', user); // Connexion\r\n      } else {\r\n        this.user = user; // Déconnexion\r\n      }\r\n    });\r\n\r\n    // Chargement du dictionnaire une fois au début, la réponse entrainera la demande de la liste des suggestions\r\n    this.socket.emit('fetchDict', {});\r\n\r\n    // Tente de se connecter avec le compte Google\r\n    setTimeout(() => {\r\n      try {\r\n        this.authService.refreshAuthToken(GoogleLoginProvider.PROVIDER_ID);\r\n      } catch (e) {\r\n        console.error(e.message);\r\n      }\r\n    }, 1000);\r\n\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    // PROBLEME DU SETTIMEOUT ici, j'ai rien trouvé de mieux :/\r\n    // Si la préférence utilisateur pour l'affichage de la nav à gauche est spécifiée, on adapte la fenêtre en conséquence\r\n    if (window.localStorage.getItem('menuToggle')) {\r\n      setTimeout(() => {\r\n        this.setMenuDisplay(window.localStorage.getItem('menuToggle') === 'true' ? true : false);\r\n      }, 50);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Quand on clique sur le chevron en haut à gauche, l'affichage du menu se toggle\r\n   */\r\n  toggleMenu(): void {\r\n    if (this.menuDisplayed) {\r\n      this.setMenuDisplay(false);\r\n    } else {\r\n      this.setMenuDisplay(true);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Affiche et enlève le menu à gauche (pour affichage petit / téléphone)\r\n   * Fonctionne avec un localStorage pour enregistrer la pref utilisateur\r\n   */\r\n  setMenuDisplay(navDisplay: boolean): void {\r\n    if (navDisplay) {\r\n      this.menuDisplayed = true;\r\n      this.nav.nativeElement.style.width = '200px';\r\n      this.content.nativeElement.style.width = 'calc(100% - 200px)';\r\n      window.localStorage.setItem('menuToggle', 'true');\r\n    } else {\r\n      this.menuDisplayed = false;\r\n      this.nav.nativeElement.style.width = '0%';\r\n      this.content.nativeElement.style.width = '100%';\r\n      window.localStorage.setItem('menuToggle', 'false');\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Change de page\r\n   */\r\n  setNav(page: PageName): void {\r\n    this.navigation = page;\r\n    window.localStorage.setItem('nav', page);\r\n  }\r\n\r\n  /**\r\n   * Pour le flag\r\n   */\r\n  setSize(size: number): void {\r\n    this.pixelSize = size;\r\n  }\r\n\r\n  reload() {\r\n    const url = window.location.href;\r\n    window.open(url, '_self');\r\n  }\r\n\r\n  openNewBlank() {\r\n    const url = window.location.href;\r\n    window.open(url, '_blank');\r\n  }\r\n\r\n  /**\r\n   * Ouvre la fenêtre de connexion\r\n   */\r\n  openUserMenu() {\r\n    this.userMenu = true;\r\n  }\r\n\r\n  /**\r\n   * Setter de la connexion admin (fonction déclenchée par un eventEmitter du component main/conncet-center)\r\n   */\r\n  setAdminConnected(event: boolean) {\r\n    this.adminConnected = event;\r\n  }\r\n\r\n  /**\r\n   * Setter de l'affichage de la page admin (fonction déclenchée par un eventEmitter du component main/conncet-center)\r\n   */\r\n  setUserMenu(event: boolean) {\r\n    this.userMenu = event;\r\n  }\r\n\r\n  /**\r\n   * Set l'utilisateur qui s'est connecté via Google\r\n   */\r\n  setUser(event: SocialUser): void {\r\n    this.user = event;\r\n  }\r\n\r\n}\r\n","<div class=\"body\">\r\n    <app-connect-center *ngIf=\"userMenu\" [adminConnected]=\"adminConnected\" [pwd]=\"pwd\" [user]=\"user\"\r\n        [accountSettings]=\"accountSettings\" (adminConnectionEmitter)=\"setAdminConnected($event)\"\r\n        (closeBoxEmitter)=\"setUserMenu($event)\" (userEmitter)=\"setUser($event)\">\r\n    </app-connect-center>\r\n    <div class=\"container\">\r\n        <div class=\"header\">\r\n            <div class=\"menu-button\" *ngIf=\"menuDisplayed\" (click)=\"toggleMenu()\"><img\r\n                    src=\"./assets/chevron-left-solid.svg\" title=\"Modifier\"></div>\r\n            <div class=\"menu-button\" *ngIf=\"!menuDisplayed\" (click)=\"toggleMenu()\"><img\r\n                    src=\"./assets/chevron-right-solid.svg\" title=\"Modifier\"></div>\r\n            <div class=\"block-title\">\r\n                <h1 [className]=\"adminConnected ? 'title-gold' : 'title'\" (click)=\"reload()\"\r\n                    (auxclick)=\"openNewBlank()\">Dictionnaire Dibi</h1>\r\n            </div>\r\n            <div class=\"groupped-imgs\">\r\n                <img *ngIf=\"adminConnected\" class=\"golden-crown\" src=\"assets/crown-solid.svg\" title=\"Admin\">\r\n                <img *ngIf=\"!user\" class=\"user-button\" src=\"assets/user-solid.svg\" (click)=\"openUserMenu()\"\r\n                    title=\"Connexion\">\r\n                <img *ngIf=\"user\" class=\"user-connected-button\" src=\"{{user.photoUrl}}\" (click)=\"openUserMenu()\"\r\n                    title=\"Options utilisateur\">\r\n            </div>\r\n        </div>\r\n        <div class=\"middle\">\r\n            <div class=\"nav\" #nav>\r\n\r\n                <div [ngClass]=\"navigation === 'Dibi-infos' ? 'button-selected' : 'button'\"\r\n                    (click)=\"setNav('Dibi-infos')\">\r\n                    <img src=\"assets/circle-info-solid.svg\">\r\n                    <span>Accueil</span>\r\n                </div>\r\n\r\n                <div [ngClass]=\"navigation === 'Dibi-grammar-rules' ? 'button-selected' : 'button'\"\r\n                    (click)=\"setNav('Dibi-grammar-rules')\">\r\n                    <img src=\"assets/book-bookmark-solid.svg\">\r\n                    <span>Manuel</span>\r\n                </div>\r\n\r\n                <div [ngClass]=\"navigation === 'Dibi-dict' ? 'button-selected' : 'button'\"\r\n                    (click)=\"setNav('Dibi-dict')\">\r\n                    <img src=\"assets/book-solid.svg\">\r\n                    <span>Dictionnaire</span>\r\n                </div>\r\n\r\n                <div *ngIf=\"user && accountSettings\"\r\n                    [ngClass]=\"navigation === 'Dibi-suggest-word' ? 'button-selected' : 'button'\"\r\n                    (click)=\"setNav('Dibi-suggest-word')\">\r\n                    <img src=\"assets/circle-plus-solid.svg\">\r\n                    <span>Proposer</span>\r\n                </div>\r\n\r\n                <div *ngIf=\"user && accountSettings\"\r\n                    [ngClass]=\"navigation === 'Dibi-vote' ? 'button-selected' : 'button'\" (click)=\"setNav('Dibi-vote')\">\r\n                    <img src=\"assets/square-poll-horizontal-solid.svg\">\r\n                    <span>Voter</span>\r\n                </div>\r\n\r\n                <div [ngClass]=\"navigation === 'New-word' ? 'button-selected' : 'button'\" (click)=\"setNav('New-word')\">\r\n                    <img src=\"assets/circle-plus-solid.svg\">\r\n                    <span>Ajouter</span>\r\n                </div>\r\n\r\n                <!-- <div *ngIf=\"accountSettings\" [ngClass]=\"navigation === 'Account' ? 'button-selected' : 'button'\"\r\n                    (click)=\"setNav('Account')\">\r\n                    <img src=\"assets/user-solid.svg\">\r\n                    <span>Compte</span>\r\n                </div> -->\r\n\r\n                <div *ngIf=\"adminConnected\" [ngClass]=\"navigation === 'Logs' ? 'button-selected' : 'button'\"\r\n                    (click)=\"setNav('Logs')\">\r\n                    <img src=\"assets/file-lines-regular.svg\">\r\n                    <span>Logs</span>\r\n                </div>\r\n\r\n\r\n            </div>\r\n            <div class=\"content\" #content>\r\n                <div class=\"switch-component\" [ngSwitch]=\"navigation\">\r\n\r\n                    <ng-container *ngSwitchCase=\"'Infos'\">\r\n                        <app-infos></app-infos>\r\n                    </ng-container>\r\n\r\n                    <ng-container *ngSwitchCase=\"'Flag'\">\r\n                        <app-flag [pixelSize]=\"pixelSize\" [displayRegions]=\"displayRegions\"></app-flag>\r\n                    </ng-container>\r\n\r\n                    <ng-container *ngSwitchCase=\"'Dibi-infos'\">\r\n                        <app-dibi-infos [dibiDict]=\"dibiDict\"></app-dibi-infos>\r\n                    </ng-container>\r\n\r\n                    <ng-container *ngSwitchCase=\"'Dibi-dict'\">\r\n                        <app-dibi-dict [dibiDict]=\"dibiDict\" [adminConnected]=\"adminConnected\" [pwd]=\"pwd\">\r\n                        </app-dibi-dict>\r\n                    </ng-container>\r\n\r\n                    <ng-container *ngSwitchCase=\"'Dibi-grammar-rules'\">\r\n                        <app-dibi-grammar [adminConnected]=\"adminConnected\"></app-dibi-grammar>\r\n                    </ng-container>\r\n\r\n                    <ng-container *ngSwitchCase=\"'New-word'\">\r\n                        <app-dibi-new-word [adminConnected]=\"adminConnected\" [pwd]=\"pwd\"></app-dibi-new-word>\r\n                    </ng-container>\r\n\r\n                    <ng-container *ngSwitchCase=\"'Dibi-suggest-word'\">\r\n                        <app-dibi-suggest [dibiDict]=\"dibiDict\" [suggestions]=\"suggestions\" [user]=\"user\"\r\n                            [accountSettings]=\"accountSettings\">\r\n                        </app-dibi-suggest>\r\n                    </ng-container>\r\n\r\n                    <ng-container *ngSwitchCase=\"'Dibi-vote'\">\r\n                        <app-dibi-vote [dibiDict]=\"dibiDict\" [suggestions]=\"suggestions\" [user]=\"user\"\r\n                            [accountSettings]=\"accountSettings\" [profiles]=\"profiles\"></app-dibi-vote>\r\n                    </ng-container>\r\n\r\n                    <ng-container *ngSwitchCase=\"'Dibi-word'\">\r\n                        <app-dibi-vote [dibiDict]=\"dibiDict\" [suggestions]=\"suggestions\" [user]=\"user\"\r\n                            [accountSettings]=\"accountSettings\" [profiles]=\"profiles\"></app-dibi-vote>\r\n                    </ng-container>\r\n\r\n                    <!-- <ng-container *ngSwitchCase=\"'Account'\">\r\n                        <app-account></app-account>\r\n                    </ng-container> -->\r\n\r\n                    <ng-container *ngSwitchCase=\"'Logs'\">\r\n                        <app-logs></app-logs>\r\n                    </ng-container>\r\n\r\n                    <ng-container *ngSwitchDefault>\r\n                    </ng-container>\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"footer\">\r\n            <div [ngClass]=\"navigation === 'Dibi-infos' ? 'button-selected' : 'button'\" (click)=\"setNav('Dibi-infos')\">\r\n                <img src=\"assets/circle-info-solid.svg\">\r\n                <span>Accueil</span>\r\n            </div>\r\n\r\n            <div [ngClass]=\"navigation === 'Dibi-grammar-rules' ? 'button-selected' : 'button'\"\r\n                (click)=\"setNav('Dibi-grammar-rules')\">\r\n                <img src=\"assets/book-bookmark-solid.svg\">\r\n                <span>Manuel</span>\r\n            </div>\r\n\r\n            <div [ngClass]=\"navigation === 'Dibi-dict' ? 'button-selected' : 'button'\" (click)=\"setNav('Dibi-dict')\">\r\n                <img src=\"assets/book-solid.svg\">\r\n                <span>Dico</span>\r\n            </div>\r\n\r\n            <div *ngIf=\"user && accountSettings\"\r\n                [ngClass]=\"navigation === 'Dibi-suggest-word' ? 'button-selected' : 'button'\"\r\n                (click)=\"setNav('Dibi-suggest-word')\">\r\n                <img src=\"assets/circle-plus-solid.svg\">\r\n                <span>Proposer</span>\r\n            </div>\r\n\r\n            <div *ngIf=\"user && accountSettings\" [ngClass]=\"navigation === 'Dibi-vote' ? 'button-selected' : 'button'\"\r\n                (click)=\"setNav('Dibi-vote')\">\r\n                <img src=\"assets/square-poll-horizontal-solid.svg\">\r\n                <span>Voter</span>\r\n            </div>\r\n\r\n            <div *ngIf=\"adminConnected\" [ngClass]=\"navigation === 'New-word' ? 'button-selected' : 'button'\"\r\n                (click)=\"setNav('New-word')\">\r\n                <img src=\"assets/circle-plus-solid.svg\">\r\n                <span>Ajouter</span>\r\n            </div>\r\n\r\n            <!-- <div *ngIf=\"adminConnected\" [ngClass]=\"navigation === 'Logs' ? 'button-selected' : 'button'\"\r\n                (click)=\"setNav('Logs')\">\r\n                <img src=\"assets/file-lines-regular.svg\">\r\n                <span>Logs</span>\r\n            </div> -->\r\n\r\n            <div class=\"button\" (click)=\"openUserMenu()\">\r\n                <img *ngIf=\"!adminConnected\" src=\"assets/user-solid.svg\">\r\n                <img *ngIf=\"adminConnected\" src=\"assets/crown-solid.svg\">\r\n                <span>Admin</span>\r\n            </div>\r\n\r\n            <!-- <div class=\"user-bubble-button\">\r\n                <img *ngIf=\"!user\" class=\"user-button\" src=\"assets/user-solid.svg\" (click)=\"openUserMenu()\"\r\n                    title=\"Connexion\">\r\n                <img *ngIf=\"user\" class=\"user-connected-button\" src=\"{{user.photoUrl}}\" (click)=\"openUserMenu()\"\r\n                    title=\"Options utilisateur\">\r\n            </div> -->\r\n        </div>\r\n    </div>\r\n</div>","import { retry } from \"rxjs/operators\";\r\n\r\nexport function removeAccents(str: string): string {\r\n    let ret = str.normalize('NFD').replace(/[\\u0300-\\u036f]/g, ''); // Remove accents\r\n    ret = ret.replace('Œ', 'Oe');\r\n    ret = ret.replace('œ', 'oe');\r\n    return ret;\r\n}","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","var map = {\n\t\"./af\": 8685,\n\t\"./af.js\": 8685,\n\t\"./ar\": 254,\n\t\"./ar-dz\": 4312,\n\t\"./ar-dz.js\": 4312,\n\t\"./ar-kw\": 2614,\n\t\"./ar-kw.js\": 2614,\n\t\"./ar-ly\": 8630,\n\t\"./ar-ly.js\": 8630,\n\t\"./ar-ma\": 8674,\n\t\"./ar-ma.js\": 8674,\n\t\"./ar-sa\": 9032,\n\t\"./ar-sa.js\": 9032,\n\t\"./ar-tn\": 4730,\n\t\"./ar-tn.js\": 4730,\n\t\"./ar.js\": 254,\n\t\"./az\": 3052,\n\t\"./az.js\": 3052,\n\t\"./be\": 150,\n\t\"./be.js\": 150,\n\t\"./bg\": 3069,\n\t\"./bg.js\": 3069,\n\t\"./bm\": 3466,\n\t\"./bm.js\": 3466,\n\t\"./bn\": 8516,\n\t\"./bn-bd\": 557,\n\t\"./bn-bd.js\": 557,\n\t\"./bn.js\": 8516,\n\t\"./bo\": 6273,\n\t\"./bo.js\": 6273,\n\t\"./br\": 9588,\n\t\"./br.js\": 9588,\n\t\"./bs\": 9815,\n\t\"./bs.js\": 9815,\n\t\"./ca\": 3331,\n\t\"./ca.js\": 3331,\n\t\"./cs\": 1320,\n\t\"./cs.js\": 1320,\n\t\"./cv\": 2219,\n\t\"./cv.js\": 2219,\n\t\"./cy\": 8266,\n\t\"./cy.js\": 8266,\n\t\"./da\": 6427,\n\t\"./da.js\": 6427,\n\t\"./de\": 7435,\n\t\"./de-at\": 2871,\n\t\"./de-at.js\": 2871,\n\t\"./de-ch\": 2994,\n\t\"./de-ch.js\": 2994,\n\t\"./de.js\": 7435,\n\t\"./dv\": 2357,\n\t\"./dv.js\": 2357,\n\t\"./el\": 5649,\n\t\"./el.js\": 5649,\n\t\"./en-au\": 9961,\n\t\"./en-au.js\": 9961,\n\t\"./en-ca\": 9878,\n\t\"./en-ca.js\": 9878,\n\t\"./en-gb\": 3924,\n\t\"./en-gb.js\": 3924,\n\t\"./en-ie\": 864,\n\t\"./en-ie.js\": 864,\n\t\"./en-il\": 1579,\n\t\"./en-il.js\": 1579,\n\t\"./en-in\": 940,\n\t\"./en-in.js\": 940,\n\t\"./en-nz\": 6181,\n\t\"./en-nz.js\": 6181,\n\t\"./en-sg\": 4301,\n\t\"./en-sg.js\": 4301,\n\t\"./eo\": 5291,\n\t\"./eo.js\": 5291,\n\t\"./es\": 4529,\n\t\"./es-do\": 3764,\n\t\"./es-do.js\": 3764,\n\t\"./es-mx\": 2584,\n\t\"./es-mx.js\": 2584,\n\t\"./es-us\": 3425,\n\t\"./es-us.js\": 3425,\n\t\"./es.js\": 4529,\n\t\"./et\": 5203,\n\t\"./et.js\": 5203,\n\t\"./eu\": 678,\n\t\"./eu.js\": 678,\n\t\"./fa\": 3483,\n\t\"./fa.js\": 3483,\n\t\"./fi\": 6262,\n\t\"./fi.js\": 6262,\n\t\"./fil\": 2521,\n\t\"./fil.js\": 2521,\n\t\"./fo\": 4555,\n\t\"./fo.js\": 4555,\n\t\"./fr\": 3131,\n\t\"./fr-ca\": 8239,\n\t\"./fr-ca.js\": 8239,\n\t\"./fr-ch\": 1702,\n\t\"./fr-ch.js\": 1702,\n\t\"./fr.js\": 3131,\n\t\"./fy\": 267,\n\t\"./fy.js\": 267,\n\t\"./ga\": 3821,\n\t\"./ga.js\": 3821,\n\t\"./gd\": 1753,\n\t\"./gd.js\": 1753,\n\t\"./gl\": 4074,\n\t\"./gl.js\": 4074,\n\t\"./gom-deva\": 2762,\n\t\"./gom-deva.js\": 2762,\n\t\"./gom-latn\": 5969,\n\t\"./gom-latn.js\": 5969,\n\t\"./gu\": 2809,\n\t\"./gu.js\": 2809,\n\t\"./he\": 5402,\n\t\"./he.js\": 5402,\n\t\"./hi\": 315,\n\t\"./hi.js\": 315,\n\t\"./hr\": 410,\n\t\"./hr.js\": 410,\n\t\"./hu\": 8288,\n\t\"./hu.js\": 8288,\n\t\"./hy-am\": 8999,\n\t\"./hy-am.js\": 8999,\n\t\"./id\": 1334,\n\t\"./id.js\": 1334,\n\t\"./is\": 6959,\n\t\"./is.js\": 6959,\n\t\"./it\": 4864,\n\t\"./it-ch\": 1124,\n\t\"./it-ch.js\": 1124,\n\t\"./it.js\": 4864,\n\t\"./ja\": 6141,\n\t\"./ja.js\": 6141,\n\t\"./jv\": 9187,\n\t\"./jv.js\": 9187,\n\t\"./ka\": 2136,\n\t\"./ka.js\": 2136,\n\t\"./kk\": 4332,\n\t\"./kk.js\": 4332,\n\t\"./km\": 8607,\n\t\"./km.js\": 8607,\n\t\"./kn\": 4305,\n\t\"./kn.js\": 4305,\n\t\"./ko\": 234,\n\t\"./ko.js\": 234,\n\t\"./ku\": 6003,\n\t\"./ku.js\": 6003,\n\t\"./ky\": 5061,\n\t\"./ky.js\": 5061,\n\t\"./lb\": 2786,\n\t\"./lb.js\": 2786,\n\t\"./lo\": 6183,\n\t\"./lo.js\": 6183,\n\t\"./lt\": 29,\n\t\"./lt.js\": 29,\n\t\"./lv\": 4169,\n\t\"./lv.js\": 4169,\n\t\"./me\": 8577,\n\t\"./me.js\": 8577,\n\t\"./mi\": 8177,\n\t\"./mi.js\": 8177,\n\t\"./mk\": 337,\n\t\"./mk.js\": 337,\n\t\"./ml\": 5260,\n\t\"./ml.js\": 5260,\n\t\"./mn\": 2325,\n\t\"./mn.js\": 2325,\n\t\"./mr\": 4695,\n\t\"./mr.js\": 4695,\n\t\"./ms\": 5334,\n\t\"./ms-my\": 7151,\n\t\"./ms-my.js\": 7151,\n\t\"./ms.js\": 5334,\n\t\"./mt\": 3570,\n\t\"./mt.js\": 3570,\n\t\"./my\": 7963,\n\t\"./my.js\": 7963,\n\t\"./nb\": 8028,\n\t\"./nb.js\": 8028,\n\t\"./ne\": 6638,\n\t\"./ne.js\": 6638,\n\t\"./nl\": 302,\n\t\"./nl-be\": 6782,\n\t\"./nl-be.js\": 6782,\n\t\"./nl.js\": 302,\n\t\"./nn\": 3501,\n\t\"./nn.js\": 3501,\n\t\"./oc-lnc\": 563,\n\t\"./oc-lnc.js\": 563,\n\t\"./pa-in\": 869,\n\t\"./pa-in.js\": 869,\n\t\"./pl\": 5302,\n\t\"./pl.js\": 5302,\n\t\"./pt\": 9687,\n\t\"./pt-br\": 4884,\n\t\"./pt-br.js\": 4884,\n\t\"./pt.js\": 9687,\n\t\"./ro\": 9107,\n\t\"./ro.js\": 9107,\n\t\"./ru\": 3627,\n\t\"./ru.js\": 3627,\n\t\"./sd\": 355,\n\t\"./sd.js\": 355,\n\t\"./se\": 3427,\n\t\"./se.js\": 3427,\n\t\"./si\": 1848,\n\t\"./si.js\": 1848,\n\t\"./sk\": 4590,\n\t\"./sk.js\": 4590,\n\t\"./sl\": 184,\n\t\"./sl.js\": 184,\n\t\"./sq\": 6361,\n\t\"./sq.js\": 6361,\n\t\"./sr\": 8965,\n\t\"./sr-cyrl\": 1287,\n\t\"./sr-cyrl.js\": 1287,\n\t\"./sr.js\": 8965,\n\t\"./ss\": 5456,\n\t\"./ss.js\": 5456,\n\t\"./sv\": 451,\n\t\"./sv.js\": 451,\n\t\"./sw\": 7558,\n\t\"./sw.js\": 7558,\n\t\"./ta\": 2702,\n\t\"./ta.js\": 2702,\n\t\"./te\": 3693,\n\t\"./te.js\": 3693,\n\t\"./tet\": 1243,\n\t\"./tet.js\": 1243,\n\t\"./tg\": 2500,\n\t\"./tg.js\": 2500,\n\t\"./th\": 5768,\n\t\"./th.js\": 5768,\n\t\"./tk\": 7761,\n\t\"./tk.js\": 7761,\n\t\"./tl-ph\": 5780,\n\t\"./tl-ph.js\": 5780,\n\t\"./tlh\": 9590,\n\t\"./tlh.js\": 9590,\n\t\"./tr\": 3807,\n\t\"./tr.js\": 3807,\n\t\"./tzl\": 3857,\n\t\"./tzl.js\": 3857,\n\t\"./tzm\": 654,\n\t\"./tzm-latn\": 8806,\n\t\"./tzm-latn.js\": 8806,\n\t\"./tzm.js\": 654,\n\t\"./ug-cn\": 845,\n\t\"./ug-cn.js\": 845,\n\t\"./uk\": 9232,\n\t\"./uk.js\": 9232,\n\t\"./ur\": 7052,\n\t\"./ur.js\": 7052,\n\t\"./uz\": 7967,\n\t\"./uz-latn\": 2233,\n\t\"./uz-latn.js\": 2233,\n\t\"./uz.js\": 7967,\n\t\"./vi\": 8615,\n\t\"./vi.js\": 8615,\n\t\"./x-pseudo\": 2320,\n\t\"./x-pseudo.js\": 2320,\n\t\"./yo\": 1313,\n\t\"./yo.js\": 1313,\n\t\"./zh-cn\": 4490,\n\t\"./zh-cn.js\": 4490,\n\t\"./zh-hk\": 5910,\n\t\"./zh-hk.js\": 5910,\n\t\"./zh-mo\": 8262,\n\t\"./zh-mo.js\": 8262,\n\t\"./zh-tw\": 4223,\n\t\"./zh-tw.js\": 4223\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 6700;"],"names":[],"sourceRoot":"webpack:///"}